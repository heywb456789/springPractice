2025-05-06 20:43:13.925 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 17628 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-06 20:43:13.931 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-06 20:43:13.932 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-06 20:43:13.993 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 20:43:13.994 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 20:43:16.026 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 20:43:16.530 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 494 ms. Found 24 JPA repository interfaces.
2025-05-06 20:43:17.734 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-06 20:43:17.750 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 20:43:17.750 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-06 20:43:17.861 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 20:43:17.861 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3866 ms
2025-05-06 20:43:18.390 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 20:43:18.486 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-06 20:43:18.534 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 20:43:18.951 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 20:43:18.992 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-06 20:43:19.097 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-06 20:43:19.100 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 2 msec}
2025-05-06 20:43:19.101 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@44cb72d2
2025-05-06 20:43:19.103 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-06 20:43:19.121 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-06 20:43:19.121 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
2025-05-06 20:43:19.138 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 20:43:19.547 ERROR [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Collection 'com.tomato.naraclub.application.original.entity.Article.comments' is 'mappedBy' a property named 'video' which does not exist in the target entity 'com.tomato.naraclub.application.comment.entity.ArticleComments'
2025-05-06 20:43:19.548 ERROR [restartedMain] o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\common\security\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2025-05-06 20:43:19.579 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 20:43:19.582 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [narasarang-pool housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1763)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1583)
2025-05-06 20:43:19.585 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-05-06 20:43:19.586 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Shutdown initiated...
2025-05-06 20:43:19.588 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Shutdown completed.
2025-05-06 20:43:19.600 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 20:43:19.631 ERROR [restartedMain] o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\common\security\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 71 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.tomato.naraclub.application.original.entity.Article.comments' is 'mappedBy' a property named 'video' which does not exist in the target entity 'com.tomato.naraclub.application.comment.entity.ArticleComments'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 97 common frames omitted
Caused by: org.hibernate.AnnotationException: Collection 'com.tomato.naraclub.application.original.entity.Article.comments' is 'mappedBy' a property named 'video' which does not exist in the target entity 'com.tomato.naraclub.application.comment.entity.ArticleComments'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1639)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1653)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1614)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1605)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1811)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1770)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:334)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 104 common frames omitted
2025-05-06 20:44:10.899 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 22888 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-06 20:44:10.901 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-06 20:44:10.902 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-06 20:44:10.952 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 20:44:10.952 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 20:44:12.614 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 20:44:13.104 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 480 ms. Found 24 JPA repository interfaces.
2025-05-06 20:44:14.229 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-06 20:44:14.247 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 20:44:14.248 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-06 20:44:14.363 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 20:44:14.363 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3410 ms
2025-05-06 20:44:14.853 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 20:44:14.939 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-06 20:44:14.986 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 20:44:15.345 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 20:44:15.384 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-06 20:44:15.480 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-06 20:44:15.483 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 3 msec}
2025-05-06 20:44:15.484 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@739e42fb
2025-05-06 20:44:15.486 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-06 20:44:15.502 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-06 20:44:15.502 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
2025-05-06 20:44:15.518 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 20:44:15.899 ERROR [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Collection 'com.tomato.naraclub.application.original.entity.Article.comments' is 'mappedBy' a property named 'video' which does not exist in the target entity 'com.tomato.naraclub.application.comment.entity.ArticleComments'
2025-05-06 20:44:15.900 ERROR [restartedMain] o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\common\security\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2025-05-06 20:44:15.926 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-06 20:44:15.929 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [narasarang-pool housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1763)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1583)
2025-05-06 20:44:15.931 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-05-06 20:44:15.932 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Shutdown initiated...
2025-05-06 20:44:15.934 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Shutdown completed.
2025-05-06 20:44:15.946 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-06 20:44:15.974 ERROR [restartedMain] o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\common\security\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 71 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Collection 'com.tomato.naraclub.application.original.entity.Article.comments' is 'mappedBy' a property named 'video' which does not exist in the target entity 'com.tomato.naraclub.application.comment.entity.ArticleComments'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 97 common frames omitted
Caused by: org.hibernate.AnnotationException: Collection 'com.tomato.naraclub.application.original.entity.Article.comments' is 'mappedBy' a property named 'video' which does not exist in the target entity 'com.tomato.naraclub.application.comment.entity.ArticleComments'
	at org.hibernate.boot.model.internal.CollectionBinder.isReversePropertyInJoin(CollectionBinder.java:1639)
	at org.hibernate.boot.model.internal.CollectionBinder.noAssociationTable(CollectionBinder.java:1653)
	at org.hibernate.boot.model.internal.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:1614)
	at org.hibernate.boot.model.internal.CollectionBinder$1.secondPass(CollectionBinder.java:1605)
	at org.hibernate.boot.model.internal.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1811)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1770)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:334)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 104 common frames omitted
2025-05-06 20:45:20.509 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 21844 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-06 20:45:20.511 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-06 20:45:20.511 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-06 20:45:20.562 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 20:45:20.562 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 20:45:22.226 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 20:45:22.720 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 485 ms. Found 24 JPA repository interfaces.
2025-05-06 20:45:23.863 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-06 20:45:23.878 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 20:45:23.879 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-06 20:45:23.990 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 20:45:23.991 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3428 ms
2025-05-06 20:45:24.481 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 20:45:24.555 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-06 20:45:24.601 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 20:45:24.957 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 20:45:24.995 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-06 20:45:25.089 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-06 20:45:25.092 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 3 msec}
2025-05-06 20:45:25.093 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6b2a748b
2025-05-06 20:45:25.095 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-06 20:45:25.112 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-06 20:45:25.112 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
2025-05-06 20:45:25.126 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 20:45:26.693 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 20:45:26.720 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
2025-05-06 20:45:26.721 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:45:26.722 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-06 20:45:26.722 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd

2025-05-06 20:45:26.723 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
 {executed in 0 msec}
2025-05-06 20:45:26.725 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       drop 
       foreign key if exists FKrjl5a44ql2wub93e57cssmdum
2025-05-06 20:45:26.725 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       drop 
       foreign key if exists FKrjl5a44ql2wub93e57cssmdum

2025-05-06 20:45:26.726 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       drop 
       foreign key if exists FKrjl5a44ql2wub93e57cssmdum
 {executed in 1 msec}
2025-05-06 20:45:26.727 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       drop 
       foreign key if exists FKmvsmkpig4orwys1pkn85c9acv
2025-05-06 20:45:26.727 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKmvsmkpig4orwys1pkn85c9acv

2025-05-06 20:45:26.727 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKmvsmkpig4orwys1pkn85c9acv
 {executed in 0 msec}
2025-05-06 20:45:26.728 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       drop 
       foreign key if exists FKor5iuipt61qkwcu4f5iwfwdmh
2025-05-06 20:45:26.728 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKor5iuipt61qkwcu4f5iwfwdmh

2025-05-06 20:45:26.728 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKor5iuipt61qkwcu4f5iwfwdmh
 {executed in 0 msec}
2025-05-06 20:45:26.729 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_image 
       drop 
       foreign key if exists FK95i2j4ej4c62adqboymtx7q96
2025-05-06 20:45:26.729 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       drop 
       foreign key if exists FK95i2j4ej4c62adqboymtx7q96

2025-05-06 20:45:26.729 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       drop 
       foreign key if exists FK95i2j4ej4c62adqboymtx7q96
 {executed in 0 msec}
2025-05-06 20:45:26.729 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
2025-05-06 20:45:26.730 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c

2025-05-06 20:45:26.730 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
 {executed in 0 msec}
2025-05-06 20:45:26.731 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
2025-05-06 20:45:26.731 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f

2025-05-06 20:45:26.731 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
 {executed in 0 msec}
2025-05-06 20:45:26.732 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
2025-05-06 20:45:26.732 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13

2025-05-06 20:45:26.732 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
 {executed in 0 msec}
2025-05-06 20:45:26.733 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
2025-05-06 20:45:26.733 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq

2025-05-06 20:45:26.733 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
 {executed in 0 msec}
2025-05-06 20:45:26.733 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
2025-05-06 20:45:26.734 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3

2025-05-06 20:45:26.734 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
 {executed in 0 msec}
2025-05-06 20:45:26.734 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
2025-05-06 20:45:26.734 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu

2025-05-06 20:45:26.735 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
 {executed in 0 msec}
2025-05-06 20:45:26.735 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
2025-05-06 20:45:26.735 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj

2025-05-06 20:45:26.736 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
 {executed in 1 msec}
2025-05-06 20:45:26.736 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
2025-05-06 20:45:26.736 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq

2025-05-06 20:45:26.737 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
 {executed in 1 msec}
2025-05-06 20:45:26.737 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
2025-05-06 20:45:26.737 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn

2025-05-06 20:45:26.738 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
 {executed in 1 msec}
2025-05-06 20:45:26.738 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
2025-05-06 20:45:26.738 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m

2025-05-06 20:45:26.738 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
 {executed in 0 msec}
2025-05-06 20:45:26.739 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
2025-05-06 20:45:26.739 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx

2025-05-06 20:45:26.739 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
 {executed in 0 msec}
2025-05-06 20:45:26.739 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
2025-05-06 20:45:26.740 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6

2025-05-06 20:45:26.740 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
 {executed in 0 msec}
2025-05-06 20:45:26.740 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
2025-05-06 20:45:26.741 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq

2025-05-06 20:45:26.741 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
 {executed in 0 msec}
2025-05-06 20:45:26.741 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
2025-05-06 20:45:26.741 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg

2025-05-06 20:45:26.742 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
 {executed in 1 msec}
2025-05-06 20:45:26.742 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
2025-05-06 20:45:26.742 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w

2025-05-06 20:45:26.742 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
 {executed in 0 msec}
2025-05-06 20:45:26.743 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
2025-05-06 20:45:26.743 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx

2025-05-06 20:45:26.743 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
 {executed in 0 msec}
2025-05-06 20:45:26.743 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
2025-05-06 20:45:26.744 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb

2025-05-06 20:45:26.744 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
 {executed in 0 msec}
2025-05-06 20:45:26.744 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
2025-05-06 20:45:26.745 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986

2025-05-06 20:45:26.745 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
 {executed in 0 msec}
2025-05-06 20:45:26.745 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
2025-05-06 20:45:26.745 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd

2025-05-06 20:45:26.746 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
 {executed in 1 msec}
2025-05-06 20:45:26.746 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
2025-05-06 20:45:26.746 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm

2025-05-06 20:45:26.747 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
 {executed in 0 msec}
2025-05-06 20:45:26.747 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
2025-05-06 20:45:26.747 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn

2025-05-06 20:45:26.747 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
 {executed in 0 msec}
2025-05-06 20:45:26.747 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
2025-05-06 20:45:26.748 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef

2025-05-06 20:45:26.748 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
 {executed in 0 msec}
2025-05-06 20:45:26.748 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
2025-05-06 20:45:26.748 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k

2025-05-06 20:45:26.749 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
 {executed in 1 msec}
2025-05-06 20:45:26.749 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
2025-05-06 20:45:26.749 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc

2025-05-06 20:45:26.750 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
 {executed in 1 msec}
2025-05-06 20:45:26.750 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin
2025-05-06 20:45:26.750 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin

2025-05-06 20:45:26.760 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin
 {executed in 10 msec}
2025-05-06 20:45:26.760 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin_refresh_token
2025-05-06 20:45:26.760 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token

2025-05-06 20:45:26.771 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token
 {executed in 10 msec}
2025-05-06 20:45:26.771 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article
2025-05-06 20:45:26.772 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article

2025-05-06 20:45:26.781 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article
 {executed in 9 msec}
2025-05-06 20:45:26.781 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article_comments
2025-05-06 20:45:26.781 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_comments

2025-05-06 20:45:26.790 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_comments
 {executed in 9 msec}
2025-05-06 20:45:26.790 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article_image
2025-05-06 20:45:26.790 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_image

2025-05-06 20:45:26.799 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_image
 {executed in 8 msec}
2025-05-06 20:45:26.800 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_comments
2025-05-06 20:45:26.800 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments

2025-05-06 20:45:26.808 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments
 {executed in 8 msec}
2025-05-06 20:45:26.809 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post
2025-05-06 20:45:26.809 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post

2025-05-06 20:45:26.817 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post
 {executed in 8 msec}
2025-05-06 20:45:26.817 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_image
2025-05-06 20:45:26.818 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image

2025-05-06 20:45:26.826 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image
 {executed in 8 msec}
2025-05-06 20:45:26.827 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_like
2025-05-06 20:45:26.827 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like

2025-05-06 20:45:26.836 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like
 {executed in 9 msec}
2025-05-06 20:45:26.836 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_view_history
2025-05-06 20:45:26.837 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history

2025-05-06 20:45:26.846 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history
 {executed in 9 msec}
2025-05-06 20:45:26.846 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_member
2025-05-06 20:45:26.846 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member

2025-05-06 20:45:26.855 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member
 {executed in 9 msec}
2025-05-06 20:45:26.856 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_refresh_token
2025-05-06 20:45:26.856 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token

2025-05-06 20:45:26.864 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token
 {executed in 8 msec}
2025-05-06 20:45:26.865 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video
2025-05-06 20:45:26.865 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video

2025-05-06 20:45:26.874 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video
 {executed in 9 msec}
2025-05-06 20:45:26.874 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_comments
2025-05-06 20:45:26.874 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments

2025-05-06 20:45:26.883 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments
 {executed in 9 msec}
2025-05-06 20:45:26.883 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_view_history
2025-05-06 20:45:26.883 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history

2025-05-06 20:45:26.892 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history
 {executed in 9 msec}
2025-05-06 20:45:26.892 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_comments
2025-05-06 20:45:26.892 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments

2025-05-06 20:45:26.901 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments
 {executed in 9 msec}
2025-05-06 20:45:26.901 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_option
2025-05-06 20:45:26.901 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option

2025-05-06 20:45:26.911 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option
 {executed in 10 msec}
2025-05-06 20:45:26.911 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post
2025-05-06 20:45:26.911 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post

2025-05-06 20:45:26.920 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post
 {executed in 9 msec}
2025-05-06 20:45:26.920 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post_view_history
2025-05-06 20:45:26.920 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history

2025-05-06 20:45:26.929 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history
 {executed in 9 msec}
2025-05-06 20:45:26.930 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_record
2025-05-06 20:45:26.930 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record

2025-05-06 20:45:26.942 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record
 {executed in 12 msec}
2025-05-06 20:45:26.951 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:26.951 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:26.962 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
 {executed in 10 msec}
2025-05-06 20:45:26.963 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:26.963 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:26.972 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:26.973 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        is_deleted bit not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        author_id bigint not null,
        comment_count bigint not null comment '댓글수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
2025-05-06 20:45:26.974 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        is_deleted bit not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        author_id bigint not null,
        comment_count bigint not null comment '댓글수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB

2025-05-06 20:45:26.983 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        is_deleted bit not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        author_id bigint not null,
        comment_count bigint not null comment '댓글수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:26.984 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article_comments (
        is_deleted bit not null,
        article_id bigint not null comment '투표 게시글',
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:26.985 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_comments (
        is_deleted bit not null,
        article_id bigint not null comment '투표 게시글',
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:26.993 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_comments (
        is_deleted bit not null,
        article_id bigint not null comment '투표 게시글',
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:45:26.994 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article_image (
        article_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:26.994 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_image (
        article_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.003 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_image (
        article_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.004 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.004 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.013 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.014 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
2025-05-06 20:45:27.014 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB

2025-05-06 20:45:27.024 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.024 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.024 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.034 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.034 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.034 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.043 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:45:27.044 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.044 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.053 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.054 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.054 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.063 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:45:27.063 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.063 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.072 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.073 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
2025-05-06 20:45:27.073 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB

2025-05-06 20:45:27.082 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.083 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.083 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.091 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:45:27.092 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.092 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.101 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:45:27.101 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.101 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.110 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.111 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.111 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.120 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:45:27.120 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
2025-05-06 20:45:27.120 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB

2025-05-06 20:45:27.130 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
 {executed in 10 msec}
2025-05-06 20:45:27.130 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.131 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.140 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:45:27.140 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:45:27.141 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:45:27.149 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:45:27.150 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin 
       on t_admin (created_at)
2025-05-06 20:45:27.150 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)

2025-05-06 20:45:27.167 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.167 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
2025-05-06 20:45:27.167 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)

2025-05-06 20:45:27.184 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
 {executed in 17 msec}
2025-05-06 20:45:27.184 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
2025-05-06 20:45:27.184 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)

2025-05-06 20:45:27.200 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.200 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
2025-05-06 20:45:27.200 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)

2025-05-06 20:45:27.217 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
 {executed in 17 msec}
2025-05-06 20:45:27.217 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_created_at 
       on t_article (created_at)
2025-05-06 20:45:27.217 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)

2025-05-06 20:45:27.234 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.234 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
2025-05-06 20:45:27.234 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)

2025-05-06 20:45:27.251 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
 {executed in 17 msec}
2025-05-06 20:45:27.251 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_comments_created_at 
       on t_article_comments (created_at)
2025-05-06 20:45:27.252 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_comments_created_at 
       on t_article_comments (created_at)

2025-05-06 20:45:27.267 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_comments_created_at 
       on t_article_comments (created_at)
 {executed in 15 msec}
2025-05-06 20:45:27.267 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_image_post_id 
       on t_article_image (board_post_id)
2025-05-06 20:45:27.267 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_image_post_id 
       on t_article_image (board_post_id)

2025-05-06 20:45:27.273 WARN  [restartedMain] o.m.jdbc.message.server.ErrorPacket - Error: 1072-42000: Key column 'board_post_id' doesn't exist in table
2025-05-06 20:45:27.274 ERROR [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_image_post_id 
       on t_article_image (board_post_id)

java.sql.SQLSyntaxErrorException: (conn=8) Key column 'board_post_id' doesn't exist in table
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-06 20:45:27.277 ERROR [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_image_post_id 
       on t_article_image (board_post_id)
 {FAILED after 7 msec}
java.sql.SQLSyntaxErrorException: (conn=8) Key column 'board_post_id' doesn't exist in table
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-06 20:45:27.280 WARN  [restartedMain] o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create index idx01_t_article_image_post_id 
       on t_article_image (board_post_id)" via JDBC [(conn=8) Key column 'board_post_id' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create index idx01_t_article_image_post_id 
       on t_article_image (board_post_id)" via JDBC [(conn=8) Key column 'board_post_id' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: (conn=8) Key column 'board_post_id' doesn't exist in table
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-05-06 20:45:27.283 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
2025-05-06 20:45:27.283 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)

2025-05-06 20:45:27.299 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.299 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
2025-05-06 20:45:27.299 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)

2025-05-06 20:45:27.315 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.315 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_views 
       on t_board_post (views)
2025-05-06 20:45:27.315 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)

2025-05-06 20:45:27.332 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)
 {executed in 17 msec}
2025-05-06 20:45:27.332 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_title 
       on t_board_post (title)
2025-05-06 20:45:27.332 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)

2025-05-06 20:45:27.348 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)
 {executed in 16 msec}
2025-05-06 20:45:27.349 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_content 
       on t_board_post (content)
2025-05-06 20:45:27.349 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)

2025-05-06 20:45:27.367 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)
 {executed in 18 msec}
2025-05-06 20:45:27.367 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
2025-05-06 20:45:27.368 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)

2025-05-06 20:45:27.384 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
 {executed in 16 msec}
2025-05-06 20:45:27.384 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
2025-05-06 20:45:27.384 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)

2025-05-06 20:45:27.400 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
 {executed in 16 msec}
2025-05-06 20:45:27.401 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
2025-05-06 20:45:27.401 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)

2025-05-06 20:45:27.418 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
 {executed in 17 msec}
2025-05-06 20:45:27.418 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_member 
       on t_member (created_at)
2025-05-06 20:45:27.418 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)

2025-05-06 20:45:27.434 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)
 {executed in 15 msec}
2025-05-06 20:45:27.435 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
2025-05-06 20:45:27.435 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)

2025-05-06 20:45:27.451 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
 {executed in 15 msec}
2025-05-06 20:45:27.451 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
2025-05-06 20:45:27.451 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)

2025-05-06 20:45:27.466 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
 {executed in 15 msec}
2025-05-06 20:45:27.466 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
2025-05-06 20:45:27.466 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)

2025-05-06 20:45:27.482 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
 {executed in 16 msec}
2025-05-06 20:45:27.482 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_created_at 
       on t_video (created_at)
2025-05-06 20:45:27.483 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)

2025-05-06 20:45:27.499 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.499 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
2025-05-06 20:45:27.499 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)

2025-05-06 20:45:27.514 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
 {executed in 15 msec}
2025-05-06 20:45:27.514 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
2025-05-06 20:45:27.514 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)

2025-05-06 20:45:27.530 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
 {executed in 15 msec}
2025-05-06 20:45:27.530 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
2025-05-06 20:45:27.530 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)

2025-05-06 20:45:27.546 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.546 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
2025-05-06 20:45:27.546 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)

2025-05-06 20:45:27.563 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
 {executed in 17 msec}
2025-05-06 20:45:27.563 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
2025-05-06 20:45:27.563 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)

2025-05-06 20:45:27.579 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.580 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
2025-05-06 20:45:27.580 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)

2025-05-06 20:45:27.596 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.596 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
2025-05-06 20:45:27.597 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)

2025-05-06 20:45:27.613 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
 {executed in 16 msec}
2025-05-06 20:45:27.613 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
2025-05-06 20:45:27.614 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)

2025-05-06 20:45:27.641 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
 {executed in 27 msec}
2025-05-06 20:45:27.642 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       add constraint FKrjl5a44ql2wub93e57cssmdum 
       foreign key (author_id) 
       references t_admin (id)
2025-05-06 20:45:27.642 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint FKrjl5a44ql2wub93e57cssmdum 
       foreign key (author_id) 
       references t_admin (id)

2025-05-06 20:45:27.669 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint FKrjl5a44ql2wub93e57cssmdum 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 26 msec}
2025-05-06 20:45:27.669 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       add constraint FKmvsmkpig4orwys1pkn85c9acv 
       foreign key (article_id) 
       references t_article (id)
2025-05-06 20:45:27.669 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKmvsmkpig4orwys1pkn85c9acv 
       foreign key (article_id) 
       references t_article (id)

2025-05-06 20:45:27.695 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKmvsmkpig4orwys1pkn85c9acv 
       foreign key (article_id) 
       references t_article (id)
 {executed in 26 msec}
2025-05-06 20:45:27.695 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       add constraint FKor5iuipt61qkwcu4f5iwfwdmh 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:45:27.695 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKor5iuipt61qkwcu4f5iwfwdmh 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:45:27.723 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKor5iuipt61qkwcu4f5iwfwdmh 
       foreign key (author_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:45:27.723 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_image 
       add constraint FK95i2j4ej4c62adqboymtx7q96 
       foreign key (article_id) 
       references t_article (id)
2025-05-06 20:45:27.723 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       add constraint FK95i2j4ej4c62adqboymtx7q96 
       foreign key (article_id) 
       references t_article (id)

2025-05-06 20:45:27.745 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       add constraint FK95i2j4ej4c62adqboymtx7q96 
       foreign key (article_id) 
       references t_article (id)
 {executed in 22 msec}
2025-05-06 20:45:27.746 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:45:27.746 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:45:27.770 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
 {executed in 24 msec}
2025-05-06 20:45:27.770 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:45:27.770 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:45:27.798 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 28 msec}
2025-05-06 20:45:27.798 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:45:27.798 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:45:27.829 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
 {executed in 30 msec}
2025-05-06 20:45:27.829 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:45:27.829 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:45:27.856 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 25 msec}
2025-05-06 20:45:27.856 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:45:27.856 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:45:27.882 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 26 msec}
2025-05-06 20:45:27.882 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
2025-05-06 20:45:27.882 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)

2025-05-06 20:45:27.911 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
 {executed in 29 msec}
2025-05-06 20:45:27.911 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:45:27.911 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:45:27.939 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 28 msec}
2025-05-06 20:45:27.939 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
2025-05-06 20:45:27.939 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)

2025-05-06 20:45:27.967 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:45:27.967 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
2025-05-06 20:45:27.967 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)

2025-05-06 20:45:27.992 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-06 20:45:27.993 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
2025-05-06 20:45:27.993 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)

2025-05-06 20:45:28.018 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-06 20:45:28.018 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
2025-05-06 20:45:28.018 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)

2025-05-06 20:45:28.044 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 26 msec}
2025-05-06 20:45:28.044 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:45:28.044 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:45:28.068 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
 {executed in 24 msec}
2025-05-06 20:45:28.068 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
2025-05-06 20:45:28.068 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)

2025-05-06 20:45:28.107 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
 {executed in 39 msec}
2025-05-06 20:45:28.108 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
2025-05-06 20:45:28.108 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)

2025-05-06 20:45:28.133 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-06 20:45:28.133 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
2025-05-06 20:45:28.133 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)

2025-05-06 20:45:28.160 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
 {executed in 27 msec}
2025-05-06 20:45:28.161 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:45:28.161 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:45:28.187 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
 {executed in 26 msec}
2025-05-06 20:45:28.187 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:45:28.187 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:45:28.216 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 29 msec}
2025-05-06 20:45:28.216 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:45:28.216 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:45:28.242 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 26 msec}
2025-05-06 20:45:28.242 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
2025-05-06 20:45:28.242 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)

2025-05-06 20:45:28.267 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 25 msec}
2025-05-06 20:45:28.268 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
2025-05-06 20:45:28.268 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)

2025-05-06 20:45:28.292 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 24 msec}
2025-05-06 20:45:28.292 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:45:28.292 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:45:28.320 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 28 msec}
2025-05-06 20:45:28.320 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:45:28.320 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:45:28.346 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
 {executed in 26 msec}
2025-05-06 20:45:28.346 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
2025-05-06 20:45:28.346 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)

2025-05-06 20:45:28.373 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
 {executed in 27 msec}
2025-05-06 20:45:28.373 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:45:28.373 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:45:28.402 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 29 msec}
2025-05-06 20:45:28.407 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 20:45:28.906 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-06 20:45:28.909 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtFilter' configured for use
2025-05-06 20:45:29.092 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 20:45:30.803 WARN  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Found 2 UserDetailsService beans, with names [adminUserDetailsService, memberUserDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2025-05-06 20:45:31.387 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-06 20:45:32.044 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@4ebe7b20. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-06 20:45:32.045 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Deferred [Mvc [pattern='/uploads/**'], Ant [pattern='/uploads/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-06 20:45:32.471 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 20:45:32.540 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8032 (http) with context path '/'
2025-05-06 20:45:32.558 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Started NaraclubApplication in 12.749 seconds (process running for 13.423)
2025-05-06 20:46:10.021 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 26584 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-06 20:46:10.023 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-06 20:46:10.023 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-06 20:46:10.072 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 20:46:10.072 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 20:46:11.697 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 20:46:12.178 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 473 ms. Found 24 JPA repository interfaces.
2025-05-06 20:46:13.332 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-06 20:46:13.348 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 20:46:13.349 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-06 20:46:13.456 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 20:46:13.456 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3383 ms
2025-05-06 20:46:13.924 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 20:46:13.996 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-06 20:46:14.039 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 20:46:14.393 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 20:46:14.430 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-06 20:46:14.524 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-06 20:46:14.527 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 3 msec}
2025-05-06 20:46:14.528 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6b2a748b
2025-05-06 20:46:14.530 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-06 20:46:14.546 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-06 20:46:14.546 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
2025-05-06 20:46:14.560 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 20:46:16.055 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 20:46:16.079 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
2025-05-06 20:46:16.080 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:46:16.080 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-06 20:46:16.080 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd

2025-05-06 20:46:16.095 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
 {executed in 15 msec}
2025-05-06 20:46:16.095 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       drop 
       foreign key if exists FKrjl5a44ql2wub93e57cssmdum
2025-05-06 20:46:16.096 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       drop 
       foreign key if exists FKrjl5a44ql2wub93e57cssmdum

2025-05-06 20:46:16.110 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       drop 
       foreign key if exists FKrjl5a44ql2wub93e57cssmdum
 {executed in 14 msec}
2025-05-06 20:46:16.110 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       drop 
       foreign key if exists FKmvsmkpig4orwys1pkn85c9acv
2025-05-06 20:46:16.111 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKmvsmkpig4orwys1pkn85c9acv

2025-05-06 20:46:16.125 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKmvsmkpig4orwys1pkn85c9acv
 {executed in 13 msec}
2025-05-06 20:46:16.125 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       drop 
       foreign key if exists FKor5iuipt61qkwcu4f5iwfwdmh
2025-05-06 20:46:16.125 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKor5iuipt61qkwcu4f5iwfwdmh

2025-05-06 20:46:16.139 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       drop 
       foreign key if exists FKor5iuipt61qkwcu4f5iwfwdmh
 {executed in 14 msec}
2025-05-06 20:46:16.139 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_image 
       drop 
       foreign key if exists FK95i2j4ej4c62adqboymtx7q96
2025-05-06 20:46:16.140 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       drop 
       foreign key if exists FK95i2j4ej4c62adqboymtx7q96

2025-05-06 20:46:16.154 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       drop 
       foreign key if exists FK95i2j4ej4c62adqboymtx7q96
 {executed in 14 msec}
2025-05-06 20:46:16.154 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
2025-05-06 20:46:16.154 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c

2025-05-06 20:46:16.167 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
 {executed in 13 msec}
2025-05-06 20:46:16.167 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
2025-05-06 20:46:16.168 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f

2025-05-06 20:46:16.182 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
 {executed in 13 msec}
2025-05-06 20:46:16.182 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
2025-05-06 20:46:16.182 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13

2025-05-06 20:46:16.197 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
 {executed in 15 msec}
2025-05-06 20:46:16.197 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
2025-05-06 20:46:16.197 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq

2025-05-06 20:46:16.212 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
 {executed in 15 msec}
2025-05-06 20:46:16.212 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
2025-05-06 20:46:16.212 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3

2025-05-06 20:46:16.227 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
 {executed in 15 msec}
2025-05-06 20:46:16.227 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
2025-05-06 20:46:16.227 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu

2025-05-06 20:46:16.241 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
 {executed in 14 msec}
2025-05-06 20:46:16.241 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
2025-05-06 20:46:16.241 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj

2025-05-06 20:46:16.255 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
 {executed in 14 msec}
2025-05-06 20:46:16.255 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
2025-05-06 20:46:16.255 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq

2025-05-06 20:46:16.268 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
 {executed in 13 msec}
2025-05-06 20:46:16.269 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
2025-05-06 20:46:16.269 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn

2025-05-06 20:46:16.282 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
 {executed in 13 msec}
2025-05-06 20:46:16.282 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
2025-05-06 20:46:16.282 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m

2025-05-06 20:46:16.296 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
 {executed in 14 msec}
2025-05-06 20:46:16.296 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
2025-05-06 20:46:16.296 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx

2025-05-06 20:46:16.311 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
 {executed in 15 msec}
2025-05-06 20:46:16.311 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
2025-05-06 20:46:16.311 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6

2025-05-06 20:46:16.326 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
 {executed in 15 msec}
2025-05-06 20:46:16.326 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
2025-05-06 20:46:16.326 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq

2025-05-06 20:46:16.341 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
 {executed in 14 msec}
2025-05-06 20:46:16.341 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
2025-05-06 20:46:16.341 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg

2025-05-06 20:46:16.359 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
 {executed in 18 msec}
2025-05-06 20:46:16.359 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
2025-05-06 20:46:16.359 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w

2025-05-06 20:46:16.373 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
 {executed in 14 msec}
2025-05-06 20:46:16.373 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
2025-05-06 20:46:16.373 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx

2025-05-06 20:46:16.387 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
 {executed in 14 msec}
2025-05-06 20:46:16.387 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
2025-05-06 20:46:16.388 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb

2025-05-06 20:46:16.402 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
 {executed in 14 msec}
2025-05-06 20:46:16.402 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
2025-05-06 20:46:16.402 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986

2025-05-06 20:46:16.416 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
 {executed in 14 msec}
2025-05-06 20:46:16.417 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
2025-05-06 20:46:16.417 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd

2025-05-06 20:46:16.431 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
 {executed in 14 msec}
2025-05-06 20:46:16.431 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
2025-05-06 20:46:16.431 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm

2025-05-06 20:46:16.446 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
 {executed in 15 msec}
2025-05-06 20:46:16.446 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
2025-05-06 20:46:16.447 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn

2025-05-06 20:46:16.460 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
 {executed in 13 msec}
2025-05-06 20:46:16.461 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
2025-05-06 20:46:16.461 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef

2025-05-06 20:46:16.475 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
 {executed in 14 msec}
2025-05-06 20:46:16.475 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
2025-05-06 20:46:16.475 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k

2025-05-06 20:46:16.489 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
 {executed in 14 msec}
2025-05-06 20:46:16.489 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
2025-05-06 20:46:16.489 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc

2025-05-06 20:46:16.503 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
 {executed in 13 msec}
2025-05-06 20:46:16.504 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin
2025-05-06 20:46:16.504 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin

2025-05-06 20:46:16.514 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin
 {executed in 9 msec}
2025-05-06 20:46:16.514 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin_refresh_token
2025-05-06 20:46:16.514 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token

2025-05-06 20:46:16.524 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token
 {executed in 10 msec}
2025-05-06 20:46:16.524 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article
2025-05-06 20:46:16.524 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article

2025-05-06 20:46:16.533 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article
 {executed in 8 msec}
2025-05-06 20:46:16.533 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article_comments
2025-05-06 20:46:16.533 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_comments

2025-05-06 20:46:16.541 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_comments
 {executed in 8 msec}
2025-05-06 20:46:16.541 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article_image
2025-05-06 20:46:16.541 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_image

2025-05-06 20:46:16.553 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article_image
 {executed in 12 msec}
2025-05-06 20:46:16.554 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_comments
2025-05-06 20:46:16.554 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments

2025-05-06 20:46:16.562 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments
 {executed in 8 msec}
2025-05-06 20:46:16.562 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post
2025-05-06 20:46:16.562 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post

2025-05-06 20:46:16.570 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post
 {executed in 8 msec}
2025-05-06 20:46:16.570 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_image
2025-05-06 20:46:16.570 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image

2025-05-06 20:46:16.579 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image
 {executed in 8 msec}
2025-05-06 20:46:16.579 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_like
2025-05-06 20:46:16.579 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like

2025-05-06 20:46:16.587 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like
 {executed in 8 msec}
2025-05-06 20:46:16.588 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_view_history
2025-05-06 20:46:16.588 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history

2025-05-06 20:46:16.596 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history
 {executed in 8 msec}
2025-05-06 20:46:16.596 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_member
2025-05-06 20:46:16.596 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member

2025-05-06 20:46:16.605 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member
 {executed in 9 msec}
2025-05-06 20:46:16.605 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_refresh_token
2025-05-06 20:46:16.605 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token

2025-05-06 20:46:16.614 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token
 {executed in 9 msec}
2025-05-06 20:46:16.615 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video
2025-05-06 20:46:16.615 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video

2025-05-06 20:46:16.623 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video
 {executed in 8 msec}
2025-05-06 20:46:16.623 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_comments
2025-05-06 20:46:16.623 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments

2025-05-06 20:46:16.631 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments
 {executed in 8 msec}
2025-05-06 20:46:16.631 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_view_history
2025-05-06 20:46:16.631 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history

2025-05-06 20:46:16.641 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history
 {executed in 9 msec}
2025-05-06 20:46:16.641 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_comments
2025-05-06 20:46:16.641 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments

2025-05-06 20:46:16.650 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments
 {executed in 8 msec}
2025-05-06 20:46:16.650 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_option
2025-05-06 20:46:16.650 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option

2025-05-06 20:46:16.658 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option
 {executed in 8 msec}
2025-05-06 20:46:16.658 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post
2025-05-06 20:46:16.659 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post

2025-05-06 20:46:16.670 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post
 {executed in 11 msec}
2025-05-06 20:46:16.670 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post_view_history
2025-05-06 20:46:16.670 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history

2025-05-06 20:46:16.688 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history
 {executed in 17 msec}
2025-05-06 20:46:16.688 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_record
2025-05-06 20:46:16.688 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record

2025-05-06 20:46:16.697 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record
 {executed in 9 msec}
2025-05-06 20:46:16.703 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.703 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.713 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:46:16.713 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.714 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.722 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.723 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        is_deleted bit not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        author_id bigint not null,
        comment_count bigint not null comment '댓글수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
2025-05-06 20:46:16.723 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        is_deleted bit not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        author_id bigint not null,
        comment_count bigint not null comment '댓글수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB

2025-05-06 20:46:16.731 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        is_deleted bit not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        author_id bigint not null,
        comment_count bigint not null comment '댓글수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.732 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article_comments (
        is_deleted bit not null,
        article_id bigint not null comment '투표 게시글',
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.732 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_comments (
        is_deleted bit not null,
        article_id bigint not null comment '투표 게시글',
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.740 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_comments (
        is_deleted bit not null,
        article_id bigint not null comment '투표 게시글',
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.741 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article_image (
        article_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.741 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_image (
        article_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.749 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article_image (
        article_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.750 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.750 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.758 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.759 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
2025-05-06 20:46:16.759 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB

2025-05-06 20:46:16.768 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:46:16.769 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.769 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.777 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.777 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.777 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.786 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:46:16.786 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.787 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.795 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.796 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.796 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.804 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.805 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.805 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.813 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.814 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
2025-05-06 20:46:16.816 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB

2025-05-06 20:46:16.826 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:46:16.827 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.827 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.837 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 10 msec}
2025-05-06 20:46:16.838 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.838 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.847 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-06 20:46:16.847 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.847 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.855 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.856 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.856 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.864 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.865 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
2025-05-06 20:46:16.865 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB

2025-05-06 20:46:16.873 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
 {executed in 7 msec}
2025-05-06 20:46:16.873 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.873 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.881 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.882 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-06 20:46:16.882 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-06 20:46:16.891 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-06 20:46:16.891 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin 
       on t_admin (created_at)
2025-05-06 20:46:16.891 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)

2025-05-06 20:46:16.907 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)
 {executed in 16 msec}
2025-05-06 20:46:16.908 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
2025-05-06 20:46:16.908 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)

2025-05-06 20:46:16.928 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
 {executed in 20 msec}
2025-05-06 20:46:16.928 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
2025-05-06 20:46:16.928 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)

2025-05-06 20:46:16.944 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
 {executed in 15 msec}
2025-05-06 20:46:16.944 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
2025-05-06 20:46:16.944 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)

2025-05-06 20:46:16.970 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
 {executed in 25 msec}
2025-05-06 20:46:16.970 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_created_at 
       on t_article (created_at)
2025-05-06 20:46:16.970 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)

2025-05-06 20:46:16.986 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)
 {executed in 16 msec}
2025-05-06 20:46:16.986 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
2025-05-06 20:46:16.986 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)

2025-05-06 20:46:17.002 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
 {executed in 16 msec}
2025-05-06 20:46:17.003 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_comments_created_at 
       on t_article_comments (created_at)
2025-05-06 20:46:17.003 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_comments_created_at 
       on t_article_comments (created_at)

2025-05-06 20:46:17.019 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_comments_created_at 
       on t_article_comments (created_at)
 {executed in 16 msec}
2025-05-06 20:46:17.019 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_image_post_id 
       on t_article_image (article_id)
2025-05-06 20:46:17.019 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_image_post_id 
       on t_article_image (article_id)

2025-05-06 20:46:17.034 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_image_post_id 
       on t_article_image (article_id)
 {executed in 15 msec}
2025-05-06 20:46:17.034 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
2025-05-06 20:46:17.034 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)

2025-05-06 20:46:17.049 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.049 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
2025-05-06 20:46:17.049 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)

2025-05-06 20:46:17.065 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
 {executed in 16 msec}
2025-05-06 20:46:17.065 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_views 
       on t_board_post (views)
2025-05-06 20:46:17.065 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)

2025-05-06 20:46:17.080 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)
 {executed in 15 msec}
2025-05-06 20:46:17.081 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_title 
       on t_board_post (title)
2025-05-06 20:46:17.081 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)

2025-05-06 20:46:17.097 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)
 {executed in 16 msec}
2025-05-06 20:46:17.097 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_content 
       on t_board_post (content)
2025-05-06 20:46:17.097 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)

2025-05-06 20:46:17.114 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)
 {executed in 17 msec}
2025-05-06 20:46:17.117 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
2025-05-06 20:46:17.117 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)

2025-05-06 20:46:17.133 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
 {executed in 16 msec}
2025-05-06 20:46:17.133 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
2025-05-06 20:46:17.134 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)

2025-05-06 20:46:17.149 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
 {executed in 15 msec}
2025-05-06 20:46:17.149 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
2025-05-06 20:46:17.149 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)

2025-05-06 20:46:17.165 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
 {executed in 16 msec}
2025-05-06 20:46:17.165 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_member 
       on t_member (created_at)
2025-05-06 20:46:17.165 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)

2025-05-06 20:46:17.181 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.181 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
2025-05-06 20:46:17.181 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)

2025-05-06 20:46:17.197 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
 {executed in 16 msec}
2025-05-06 20:46:17.197 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
2025-05-06 20:46:17.198 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)

2025-05-06 20:46:17.212 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
 {executed in 14 msec}
2025-05-06 20:46:17.212 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
2025-05-06 20:46:17.213 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)

2025-05-06 20:46:17.229 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
 {executed in 15 msec}
2025-05-06 20:46:17.229 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_created_at 
       on t_video (created_at)
2025-05-06 20:46:17.229 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)

2025-05-06 20:46:17.244 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.245 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
2025-05-06 20:46:17.245 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)

2025-05-06 20:46:17.261 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.261 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
2025-05-06 20:46:17.261 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)

2025-05-06 20:46:17.276 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.276 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
2025-05-06 20:46:17.276 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)

2025-05-06 20:46:17.291 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.292 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
2025-05-06 20:46:17.292 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)

2025-05-06 20:46:17.307 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.307 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
2025-05-06 20:46:17.307 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)

2025-05-06 20:46:17.323 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
 {executed in 16 msec}
2025-05-06 20:46:17.323 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
2025-05-06 20:46:17.324 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)

2025-05-06 20:46:17.339 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.339 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
2025-05-06 20:46:17.339 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)

2025-05-06 20:46:17.354 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
 {executed in 15 msec}
2025-05-06 20:46:17.355 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
2025-05-06 20:46:17.355 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)

2025-05-06 20:46:17.381 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
 {executed in 26 msec}
2025-05-06 20:46:17.382 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       add constraint FKrjl5a44ql2wub93e57cssmdum 
       foreign key (author_id) 
       references t_admin (id)
2025-05-06 20:46:17.382 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint FKrjl5a44ql2wub93e57cssmdum 
       foreign key (author_id) 
       references t_admin (id)

2025-05-06 20:46:17.409 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint FKrjl5a44ql2wub93e57cssmdum 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 27 msec}
2025-05-06 20:46:17.409 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       add constraint FKmvsmkpig4orwys1pkn85c9acv 
       foreign key (article_id) 
       references t_article (id)
2025-05-06 20:46:17.410 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKmvsmkpig4orwys1pkn85c9acv 
       foreign key (article_id) 
       references t_article (id)

2025-05-06 20:46:17.434 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKmvsmkpig4orwys1pkn85c9acv 
       foreign key (article_id) 
       references t_article (id)
 {executed in 24 msec}
2025-05-06 20:46:17.434 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_comments 
       add constraint FKor5iuipt61qkwcu4f5iwfwdmh 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:46:17.434 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKor5iuipt61qkwcu4f5iwfwdmh 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:46:17.461 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_comments 
       add constraint FKor5iuipt61qkwcu4f5iwfwdmh 
       foreign key (author_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:46:17.461 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article_image 
       add constraint FK95i2j4ej4c62adqboymtx7q96 
       foreign key (article_id) 
       references t_article (id)
2025-05-06 20:46:17.461 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       add constraint FK95i2j4ej4c62adqboymtx7q96 
       foreign key (article_id) 
       references t_article (id)

2025-05-06 20:46:17.487 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article_image 
       add constraint FK95i2j4ej4c62adqboymtx7q96 
       foreign key (article_id) 
       references t_article (id)
 {executed in 26 msec}
2025-05-06 20:46:17.487 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:46:17.487 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:46:17.516 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
 {executed in 29 msec}
2025-05-06 20:46:17.516 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:46:17.516 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:46:17.545 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 29 msec}
2025-05-06 20:46:17.546 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:46:17.546 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:46:17.574 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:46:17.574 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:46:17.574 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:46:17.598 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 23 msec}
2025-05-06 20:46:17.598 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:46:17.598 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:46:17.624 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 26 msec}
2025-05-06 20:46:17.624 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
2025-05-06 20:46:17.625 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)

2025-05-06 20:46:17.652 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:46:17.653 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-06 20:46:17.653 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-06 20:46:17.677 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 24 msec}
2025-05-06 20:46:17.677 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
2025-05-06 20:46:17.678 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)

2025-05-06 20:46:17.705 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:46:17.705 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
2025-05-06 20:46:17.705 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)

2025-05-06 20:46:17.732 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:46:17.732 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
2025-05-06 20:46:17.732 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)

2025-05-06 20:46:17.757 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-06 20:46:17.757 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
2025-05-06 20:46:17.757 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)

2025-05-06 20:46:17.782 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 25 msec}
2025-05-06 20:46:17.783 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:46:17.783 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:46:17.808 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-06 20:46:17.808 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
2025-05-06 20:46:17.808 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)

2025-05-06 20:46:17.837 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
 {executed in 29 msec}
2025-05-06 20:46:17.837 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
2025-05-06 20:46:17.837 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)

2025-05-06 20:46:17.862 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 24 msec}
2025-05-06 20:46:17.862 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
2025-05-06 20:46:17.862 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)

2025-05-06 20:46:17.889 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
 {executed in 27 msec}
2025-05-06 20:46:17.889 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:46:17.889 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:46:17.914 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-06 20:46:17.914 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:46:17.915 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:46:17.941 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 26 msec}
2025-05-06 20:46:17.942 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:46:17.942 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:46:17.967 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 24 msec}
2025-05-06 20:46:17.967 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
2025-05-06 20:46:17.967 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)

2025-05-06 20:46:17.993 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 25 msec}
2025-05-06 20:46:17.993 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
2025-05-06 20:46:17.993 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)

2025-05-06 20:46:18.020 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-06 20:46:18.020 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:46:18.020 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:46:18.057 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 37 msec}
2025-05-06 20:46:18.057 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
2025-05-06 20:46:18.057 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)

2025-05-06 20:46:18.081 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
 {executed in 24 msec}
2025-05-06 20:46:18.081 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
2025-05-06 20:46:18.081 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)

2025-05-06 20:46:18.110 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
 {executed in 29 msec}
2025-05-06 20:46:18.110 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-06 20:46:18.110 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-06 20:46:18.141 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 30 msec}
2025-05-06 20:46:18.146 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 20:46:18.628 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-06 20:46:18.630 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtFilter' configured for use
2025-05-06 20:46:18.814 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 20:46:20.494 WARN  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Found 2 UserDetailsService beans, with names [adminUserDetailsService, memberUserDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2025-05-06 20:46:21.110 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-06 20:46:21.723 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@67a4f22. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-06 20:46:21.723 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Deferred [Mvc [pattern='/uploads/**'], Ant [pattern='/uploads/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-06 20:46:22.148 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 20:46:22.212 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8032 (http) with context path '/'
2025-05-06 20:46:22.226 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Started NaraclubApplication in 12.889 seconds (process running for 13.537)
2025-05-06 20:48:28.828 INFO  [http-nio-8032-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 20:48:28.828 INFO  [http-nio-8032-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 20:48:28.829 INFO  [http-nio-8032-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 20:48:35.735 DEBUG [http-nio-8032-exec-3] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:35.736 DEBUG [http-nio-8032-exec-3] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:48:35.736 DEBUG [http-nio-8032-exec-3] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-06 20:48:35.746 DEBUG [http-nio-8032-exec-3] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:35.748 DEBUG [http-nio-8032-exec-3] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 2 msec}
2025-05-06 20:48:35.749 INFO  [http-nio-8032-exec-3] jdbc.resultsettable - 
|---|-----------|-----------|------|---------------|-----|---------|-------------|-----|-----------|-----------|---------|
|id |created_at |created_by |email |last_access_at |name |password |phone_number |role |updated_at |updated_by |username |
|---|-----------|-----------|------|---------------|-----|---------|-------------|-----|-----------|-----------|---------|
|---|-----------|-----------|------|---------------|-----|---------|-------------|-----|-----------|-----------|---------|

2025-05-06 20:48:50.224 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:48:50.225 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 1 msec}
2025-05-06 20:48:50.229 DEBUG [http-nio-8032-exec-5] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:50.229 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:50.230 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:50.230 INFO  [http-nio-8032-exec-5] jdbc.resultsettable - 
|---|-----------|-----------|------|---------------|-----|---------|-------------|-----|-----------|-----------|---------|
|id |created_at |created_by |email |last_access_at |name |password |phone_number |role |updated_at |updated_by |username |
|---|-----------|-----------|------|---------------|-----|---------|-------------|-----|-----------|-----------|---------|
|---|-----------|-----------|------|---------------|-----|---------|-------------|-----|-----------|-----------|---------|

2025-05-06 20:48:50.328 DEBUG [http-nio-8032-exec-5] org.hibernate.SQL - 
    /* insert for
        com.tomato.naraclub.admin.user.entity.Admin */insert 
    into
        t_admin (created_at, created_by, email, last_access_at, name, password, phone_number, role, updated_at, updated_by, username) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-05-06 20:48:50.331 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. /* insert for com.tomato.naraclub.admin.user.entity.Admin */insert into t_admin (created_at,created_by,email,last_access_at,name,password,phone_number,role,updated_at,updated_by,username) values ('05/06/2025 20:48:50.295',NULL,'heywb457@naver.com','05/06/2025 20:48:50.295','admin','$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We','01089754896','ADMIN','05/06/2025 20:48:50.295',NULL,'admin') returning id

2025-05-06 20:48:50.333 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. /* insert for com.tomato.naraclub.admin.user.entity.Admin */insert into t_admin (created_at,created_by,email,last_access_at,name,password,phone_number,role,updated_at,updated_by,username) values ('05/06/2025 20:48:50.295',NULL,'heywb457@naver.com','05/06/2025 20:48:50.295','admin','$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We','01089754896','ADMIN','05/06/2025 20:48:50.295',NULL,'admin') returning id
 {executed in 2 msec}
2025-05-06 20:48:50.344 INFO  [http-nio-8032-exec-5] jdbc.resultsettable - 
|---|
|id |
|---|
|1  |
|---|

2025-05-06 20:48:50.411 DEBUG [http-nio-8032-exec-5] org.hibernate.SQL - 
    /* insert for
        com.tomato.naraclub.admin.auth.entity.AdminRefreshToken */insert 
    into
        t_admin_refresh_token (admin_id, created_at, created_by, device_type, expiry_date, ip_address, last_used_at, refresh_token, updated_at, updated_by, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-05-06 20:48:50.412 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. /* insert for com.tomato.naraclub.admin.auth.entity.AdminRefreshToken */insert into t_admin_refresh_token (admin_id,created_at,created_by,device_type,expiry_date,ip_address,last_used_at,refresh_token,updated_at,updated_by,user_agent) values (1,NULL,NULL,'DESKTOP','05/20/2025 20:48:50.000','0:0:0:0:0:0:0:1','05/06/2025 20:48:50.410','eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTc0NjUzMjEzMCwiZXhwIjoxNzQ3NzQxNzMwfQ.dla5-lfzWFVVgZ7Z3p9UF5nlI7Iw7Z6HO-AmVbMj20Q',NULL,NULL,'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Whale/4.31.304.16 Safari/537.36') returning id

2025-05-06 20:48:50.415 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. /* insert for com.tomato.naraclub.admin.auth.entity.AdminRefreshToken */insert into t_admin_refresh_token (admin_id,created_at,created_by,device_type,expiry_date,ip_address,last_used_at,refresh_token,updated_at,updated_by,user_agent) values (1,NULL,NULL,'DESKTOP','05/20/2025 20:48:50.000','0:0:0:0:0:0:0:1','05/06/2025 20:48:50.410','eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTc0NjUzMjEzMCwiZXhwIjoxNzQ3NzQxNzMwfQ.dla5-lfzWFVVgZ7Z3p9UF5nlI7Iw7Z6HO-AmVbMj20Q',NULL,NULL,'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Whale/4.31.304.16 Safari/537.36') returning id
 {executed in 3 msec}
2025-05-06 20:48:50.416 INFO  [http-nio-8032-exec-5] jdbc.resultsettable - 
|---|
|id |
|---|
|1  |
|---|

2025-05-06 20:48:56.573 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:48:56.574 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 1 msec}
2025-05-06 20:48:56.575 DEBUG [http-nio-8032-exec-10] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.575 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.576 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:56.579 INFO  [http-nio-8032-exec-10] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:50.295076 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.639 DEBUG [http-nio-8032-exec-10] org.hibernate.SQL - 
    /* insert for
        com.tomato.naraclub.admin.auth.entity.AdminRefreshToken */insert 
    into
        t_admin_refresh_token (admin_id, created_at, created_by, device_type, expiry_date, ip_address, last_used_at, refresh_token, updated_at, updated_by, user_agent) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 
    returning id
2025-05-06 20:48:56.640 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. /* insert for com.tomato.naraclub.admin.auth.entity.AdminRefreshToken */insert into t_admin_refresh_token (admin_id,created_at,created_by,device_type,expiry_date,ip_address,last_used_at,refresh_token,updated_at,updated_by,user_agent) values (1,NULL,NULL,'DESKTOP','05/20/2025 20:48:56.000','0:0:0:0:0:0:0:1','05/06/2025 20:48:56.639','eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTc0NjUzMjEzNiwiZXhwIjoxNzQ3NzQxNzM2fQ.AImkicLHZ6pUgSIScqZHMZnOnH-5aQ-221iKA0CGfT8',NULL,NULL,'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Whale/4.31.304.16 Safari/537.36') returning id

2025-05-06 20:48:56.641 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. /* insert for com.tomato.naraclub.admin.auth.entity.AdminRefreshToken */insert into t_admin_refresh_token (admin_id,created_at,created_by,device_type,expiry_date,ip_address,last_used_at,refresh_token,updated_at,updated_by,user_agent) values (1,NULL,NULL,'DESKTOP','05/20/2025 20:48:56.000','0:0:0:0:0:0:0:1','05/06/2025 20:48:56.639','eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbiIsInJvbGUiOiJBRE1JTiIsImlhdCI6MTc0NjUzMjEzNiwiZXhwIjoxNzQ3NzQxNzM2fQ.AImkicLHZ6pUgSIScqZHMZnOnH-5aQ-221iKA0CGfT8',NULL,NULL,'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Whale/4.31.304.16 Safari/537.36') returning id
 {executed in 0 msec}
2025-05-06 20:48:56.641 INFO  [http-nio-8032-exec-10] jdbc.resultsettable - 
|---|
|id |
|---|
|2  |
|---|

2025-05-06 20:48:56.647 DEBUG [http-nio-8032-exec-10] org.hibernate.SQL - 
    /* update
        for com.tomato.naraclub.admin.user.entity.Admin */update t_admin 
    set
        email=?,
        last_access_at=?,
        name=?,
        password=?,
        phone_number=?,
        role=?,
        updated_at=?,
        updated_by=?,
        username=? 
    where
        id=?
2025-05-06 20:48:56.648 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* update for com.tomato.naraclub.admin.user.entity.Admin */update t_admin set email='heywb457@naver.com',last_access_at='05/06/2025 20:48:56.635',name='admin',password='$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We',phone_number='01089754896',role='ADMIN',updated_at='05/06/2025 20:48:50.295',updated_by=NULL,username='admin' where id=1

2025-05-06 20:48:56.649 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
1. /* update for com.tomato.naraclub.admin.user.entity.Admin */update t_admin set email='heywb457@naver.com',last_access_at='05/06/2025 20:48:56.635',name='admin',password='$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We',phone_number='01089754896',role='ADMIN',updated_at='05/06/2025 20:48:50.295',updated_by=NULL,username='admin' where id=1
 {executed in 1 msec}
2025-05-06 20:48:56.714 DEBUG [http-nio-8032-exec-3] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.715 DEBUG [http-nio-8032-exec-3] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.715 DEBUG [http-nio-8032-exec-3] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.716 INFO  [http-nio-8032-exec-3] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.728 DEBUG [http-nio-8032-exec-3] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.729 DEBUG [http-nio-8032-exec-3] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.729 DEBUG [http-nio-8032-exec-3] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.731 INFO  [http-nio-8032-exec-3] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.818 DEBUG [http-nio-8032-exec-4] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.818 DEBUG [http-nio-8032-exec-6] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.818 DEBUG [http-nio-8032-exec-5] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.818 DEBUG [http-nio-8032-exec-4] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.819 DEBUG [http-nio-8032-exec-4] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:56.819 DEBUG [http-nio-8032-exec-7] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.819 DEBUG [http-nio-8032-exec-9] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.820 DEBUG [http-nio-8032-exec-1] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.820 INFO  [http-nio-8032-exec-4] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.820 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.821 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.822 INFO  [http-nio-8032-exec-5] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.822 DEBUG [http-nio-8032-exec-6] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.823 DEBUG [http-nio-8032-exec-6] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.823 DEBUG [http-nio-8032-exec-7] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.824 DEBUG [http-nio-8032-exec-7] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:56.824 INFO  [http-nio-8032-exec-6] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.824 DEBUG [http-nio-8032-exec-9] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.825 INFO  [http-nio-8032-exec-7] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.825 DEBUG [http-nio-8032-exec-9] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:56.825 DEBUG [http-nio-8032-exec-1] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.825 INFO  [http-nio-8032-exec-9] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.826 DEBUG [http-nio-8032-exec-1] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:56.827 INFO  [http-nio-8032-exec-1] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.830 DEBUG [http-nio-8032-exec-5] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.830 DEBUG [http-nio-8032-exec-4] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.831 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.831 DEBUG [http-nio-8032-exec-4] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.832 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:56.832 DEBUG [http-nio-8032-exec-4] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:56.833 DEBUG [http-nio-8032-exec-6] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.833 INFO  [http-nio-8032-exec-5] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.833 INFO  [http-nio-8032-exec-4] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.834 DEBUG [http-nio-8032-exec-7] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.834 DEBUG [http-nio-8032-exec-9] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.834 DEBUG [http-nio-8032-exec-6] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.834 DEBUG [http-nio-8032-exec-7] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.835 DEBUG [http-nio-8032-exec-7] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.835 DEBUG [http-nio-8032-exec-6] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.835 DEBUG [http-nio-8032-exec-1] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.835 INFO  [http-nio-8032-exec-6] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.835 INFO  [http-nio-8032-exec-7] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.836 DEBUG [http-nio-8032-exec-1] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.836 DEBUG [http-nio-8032-exec-9] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.837 DEBUG [http-nio-8032-exec-1] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.837 DEBUG [http-nio-8032-exec-9] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.838 INFO  [http-nio-8032-exec-1] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.838 INFO  [http-nio-8032-exec-9] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.855 DEBUG [http-nio-8032-exec-2] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.855 DEBUG [http-nio-8032-exec-8] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.855 DEBUG [http-nio-8032-exec-2] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.855 DEBUG [http-nio-8032-exec-8] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.856 DEBUG [http-nio-8032-exec-8] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.856 DEBUG [http-nio-8032-exec-2] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.857 INFO  [http-nio-8032-exec-8] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.857 INFO  [http-nio-8032-exec-2] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.867 DEBUG [http-nio-8032-exec-8] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.867 DEBUG [http-nio-8032-exec-2] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:56.868 DEBUG [http-nio-8032-exec-2] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.868 DEBUG [http-nio-8032-exec-8] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:56.869 DEBUG [http-nio-8032-exec-2] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.869 DEBUG [http-nio-8032-exec-8] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:48:56.869 INFO  [http-nio-8032-exec-8] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:56.869 INFO  [http-nio-8032-exec-2] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:59.584 DEBUG [http-nio-8032-exec-10] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:59.585 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:48:59.585 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-06 20:48:59.585 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:59.586 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:59.586 INFO  [http-nio-8032-exec-10] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:59.594 DEBUG [http-nio-8032-exec-10] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:48:59.594 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:48:59.595 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:48:59.595 INFO  [http-nio-8032-exec-10] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:48:59.602 ERROR [http-nio-8032-exec-10] c.t.n.c.e.GlobalExceptionAdvice - [Exception: NoResourceFoundException]
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource admin/news.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:586)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.tomato.naraclub.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:115)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.tomato.naraclub.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:115)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-05-06 20:48:59.609 WARN  [http-nio-8032-exec-10] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource admin/news.]
2025-05-06 20:52:28.327 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 25592 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-06 20:52:28.330 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-06 20:52:28.330 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-06 20:52:28.383 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-06 20:52:28.384 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-06 20:52:29.988 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-06 20:52:30.475 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 478 ms. Found 24 JPA repository interfaces.
2025-05-06 20:52:31.649 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-06 20:52:31.667 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-06 20:52:31.668 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-06 20:52:31.775 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-06 20:52:31.776 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3392 ms
2025-05-06 20:52:32.246 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-06 20:52:32.314 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-06 20:52:32.358 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-06 20:52:32.719 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-06 20:52:32.755 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-06 20:52:32.844 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-06 20:52:32.847 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 3 msec}
2025-05-06 20:52:32.848 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@125dfc5d
2025-05-06 20:52:32.850 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-06 20:52:32.866 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-06 20:52:32.867 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
2025-05-06 20:52:32.880 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-06 20:52:34.396 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-06 20:52:34.421 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:52:34.421 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-06 20:52:34.427 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'

2025-05-06 20:52:34.433 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
 {executed in 6 msec}
2025-05-06 20:52:34.434 INFO  [restartedMain] jdbc.resultsettable - 
|------------------|
|table_name        |
|------------------|
|news_article_seq  |
|point_history_seq |
|share_history_seq |
|view_history_seq  |
|vote_post_seq     |
|vote_record_seq   |
|------------------|

2025-05-06 20:52:34.434 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. SELECT 'news_article_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM news_article_seq UNION ALL SELECT 'point_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM point_history_seq UNION ALL SELECT 'share_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM share_history_seq UNION ALL SELECT 'view_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM view_history_seq UNION ALL SELECT 'vote_post_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_post_seq UNION ALL SELECT 'vote_record_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_record_seq

2025-05-06 20:52:34.436 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. SELECT 'news_article_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM news_article_seq UNION ALL SELECT 'point_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM point_history_seq UNION ALL SELECT 'share_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM share_history_seq UNION ALL SELECT 'view_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM view_history_seq UNION ALL SELECT 'vote_post_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_post_seq UNION ALL SELECT 'vote_record_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_record_seq
 {executed in 1 msec}
2025-05-06 20:52:34.439 INFO  [restartedMain] jdbc.resultsettable - 
|------------------|--------------|--------------------|------------|----------|-----------|
|sequence_name     |minimum_value |maximum_value       |start_value |increment |cache_size |
|------------------|--------------|--------------------|------------|----------|-----------|
|news_article_seq  |1             |9223372036854775806 |1           |50        |0          |
|point_history_seq |1             |9223372036854775806 |1           |50        |0          |
|share_history_seq |1             |9223372036854775806 |1           |50        |0          |
|view_history_seq  |1             |9223372036854775806 |1           |50        |0          |
|vote_post_seq     |1             |9223372036854775806 |1           |50        |0          |
|vote_record_seq   |1             |9223372036854775806 |1           |50        |0          |
|------------------|--------------|--------------------|------------|----------|-----------|

2025-05-06 20:52:34.461 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-06 20:52:34.917 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-06 20:52:34.919 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtFilter' configured for use
2025-05-06 20:52:35.128 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-06 20:52:37.217 WARN  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Found 2 UserDetailsService beans, with names [adminUserDetailsService, memberUserDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2025-05-06 20:52:37.961 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-06 20:52:38.653 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@3c9f4600. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-06 20:52:38.653 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Deferred [Mvc [pattern='/uploads/**'], Ant [pattern='/uploads/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-06 20:52:39.092 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-06 20:52:39.164 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8032 (http) with context path '/'
2025-05-06 20:52:39.179 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Started NaraclubApplication in 11.535 seconds (process running for 12.186)
2025-05-06 20:52:41.730 INFO  [http-nio-8032-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-05-06 20:52:41.731 INFO  [http-nio-8032-exec-1] o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-06 20:52:41.732 INFO  [http-nio-8032-exec-1] o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-06 20:52:41.975 DEBUG [http-nio-8032-exec-1] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:41.976 DEBUG [http-nio-8032-exec-1] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:52:41.976 DEBUG [http-nio-8032-exec-1] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-06 20:52:41.978 DEBUG [http-nio-8032-exec-1] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:41.979 DEBUG [http-nio-8032-exec-1] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:41.988 INFO  [http-nio-8032-exec-1] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:42.011 DEBUG [http-nio-8032-exec-1] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:42.012 DEBUG [http-nio-8032-exec-1] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:42.013 DEBUG [http-nio-8032-exec-1] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:42.014 INFO  [http-nio-8032-exec-1] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:42.031 ERROR [http-nio-8032-exec-1] c.t.n.c.e.GlobalExceptionAdvice - [Exception: NoResourceFoundException]
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource admin/news.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:586)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.tomato.naraclub.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:115)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.tomato.naraclub.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:115)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-05-06 20:52:42.091 WARN  [http-nio-8032-exec-1] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.servlet.resource.NoResourceFoundException: No static resource admin/news.]
2025-05-06 20:52:42.123 DEBUG [http-nio-8032-exec-2] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:42.124 DEBUG [http-nio-8032-exec-2] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:42.124 DEBUG [http-nio-8032-exec-2] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:42.125 INFO  [http-nio-8032-exec-2] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:42.134 DEBUG [http-nio-8032-exec-2] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:42.134 DEBUG [http-nio-8032-exec-2] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:42.135 DEBUG [http-nio-8032-exec-2] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:42.136 INFO  [http-nio-8032-exec-2] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.014 DEBUG [http-nio-8032-exec-3] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.014 DEBUG [http-nio-8032-exec-3] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:52:44.015 DEBUG [http-nio-8032-exec-3] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 1 msec}
2025-05-06 20:52:44.015 DEBUG [http-nio-8032-exec-3] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.015 DEBUG [http-nio-8032-exec-3] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.016 INFO  [http-nio-8032-exec-3] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.023 DEBUG [http-nio-8032-exec-3] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.023 DEBUG [http-nio-8032-exec-3] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.024 DEBUG [http-nio-8032-exec-3] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:44.025 INFO  [http-nio-8032-exec-3] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.355 DEBUG [http-nio-8032-exec-4] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.356 DEBUG [http-nio-8032-exec-5] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.356 DEBUG [http-nio-8032-exec-7] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.356 DEBUG [http-nio-8032-exec-6] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.356 DEBUG [http-nio-8032-exec-8] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.357 DEBUG [http-nio-8032-exec-4] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.357 DEBUG [http-nio-8032-exec-9] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.357 DEBUG [http-nio-8032-exec-4] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.358 INFO  [http-nio-8032-exec-4] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.359 DEBUG [http-nio-8032-exec-6] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.359 DEBUG [http-nio-8032-exec-8] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.360 DEBUG [http-nio-8032-exec-6] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.360 DEBUG [http-nio-8032-exec-8] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:44.360 INFO  [http-nio-8032-exec-6] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.360 INFO  [http-nio-8032-exec-8] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.361 DEBUG [http-nio-8032-exec-7] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.361 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.361 DEBUG [http-nio-8032-exec-7] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.362 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.362 INFO  [http-nio-8032-exec-7] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.362 INFO  [http-nio-8032-exec-5] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.362 DEBUG [http-nio-8032-exec-9] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.363 DEBUG [http-nio-8032-exec-9] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.364 INFO  [http-nio-8032-exec-9] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.367 DEBUG [http-nio-8032-exec-4] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.367 DEBUG [http-nio-8032-exec-4] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.368 DEBUG [http-nio-8032-exec-4] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:44.368 DEBUG [http-nio-8032-exec-6] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.368 DEBUG [http-nio-8032-exec-8] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.369 INFO  [http-nio-8032-exec-4] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.369 DEBUG [http-nio-8032-exec-6] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.369 DEBUG [http-nio-8032-exec-8] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.370 DEBUG [http-nio-8032-exec-6] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.370 DEBUG [http-nio-8032-exec-8] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:44.370 INFO  [http-nio-8032-exec-6] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.371 DEBUG [http-nio-8032-exec-7] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.371 DEBUG [http-nio-8032-exec-5] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.371 INFO  [http-nio-8032-exec-8] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.371 DEBUG [http-nio-8032-exec-7] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.371 DEBUG [http-nio-8032-exec-5] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.371 DEBUG [http-nio-8032-exec-7] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.372 DEBUG [http-nio-8032-exec-9] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.372 DEBUG [http-nio-8032-exec-5] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:44.372 INFO  [http-nio-8032-exec-7] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.373 DEBUG [http-nio-8032-exec-9] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.373 INFO  [http-nio-8032-exec-5] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.374 DEBUG [http-nio-8032-exec-9] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.374 INFO  [http-nio-8032-exec-9] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.387 DEBUG [http-nio-8032-exec-10] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.387 DEBUG [http-nio-8032-exec-1] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.387 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.388 DEBUG [http-nio-8032-exec-1] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.388 DEBUG [http-nio-8032-exec-1] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.388 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.389 INFO  [http-nio-8032-exec-10] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.389 INFO  [http-nio-8032-exec-1] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.398 DEBUG [http-nio-8032-exec-1] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.398 DEBUG [http-nio-8032-exec-10] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:44.399 DEBUG [http-nio-8032-exec-10] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.399 DEBUG [http-nio-8032-exec-1] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:44.399 DEBUG [http-nio-8032-exec-10] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.399 DEBUG [http-nio-8032-exec-1] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:44.400 INFO  [http-nio-8032-exec-1] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:44.400 INFO  [http-nio-8032-exec-10] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:45.676 DEBUG [http-nio-8032-exec-2] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:45.677 DEBUG [http-nio-8032-exec-2] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-06 20:52:45.677 DEBUG [http-nio-8032-exec-2] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-06 20:52:45.677 DEBUG [http-nio-8032-exec-2] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:45.678 DEBUG [http-nio-8032-exec-2] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 1 msec}
2025-05-06 20:52:45.678 INFO  [http-nio-8032-exec-2] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:45.685 DEBUG [http-nio-8032-exec-2] org.hibernate.SQL - 
    /* <criteria> */ select
        a1_0.id,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.email,
        a1_0.last_access_at,
        a1_0.name,
        a1_0.password,
        a1_0.phone_number,
        a1_0.role,
        a1_0.updated_at,
        a1_0.updated_by,
        a1_0.username 
    from
        t_admin a1_0 
    where
        a1_0.username=?
2025-05-06 20:52:45.686 DEBUG [http-nio-8032-exec-2] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'

2025-05-06 20:52:45.686 DEBUG [http-nio-8032-exec-2] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. /* <criteria> */ select a1_0.id,a1_0.created_at,a1_0.created_by,a1_0.email,a1_0.last_access_at,a1_0.name,a1_0.password,a1_0.phone_number,a1_0.role,a1_0.updated_at,a1_0.updated_by,a1_0.username from t_admin a1_0 where a1_0.username='admin'
 {executed in 0 msec}
2025-05-06 20:52:45.687 INFO  [http-nio-8032-exec-2] jdbc.resultsettable - 
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|id |created_at                 |created_by |email              |last_access_at             |name  |password                                                     |phone_number |role  |updated_at                 |updated_by |username |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|
|1  |2025-05-06 20:48:50.295076 |null       |heywb457@naver.com |2025-05-06 20:48:56.635378 |admin |$2a$10$uefnoZcUjlSDbpjhef7d6uGqc0oFy5iyx.edx.gTzfbgt/j/UD4We |01089754896  |ADMIN |2025-05-06 20:48:50.295076 |null       |admin    |
|---|---------------------------|-----------|-------------------|---------------------------|------|-------------------------------------------------------------|-------------|------|---------------------------|-----------|---------|

2025-05-06 20:52:45.700 ERROR [http-nio-8032-exec-2] c.t.n.c.e.GlobalExceptionAdvice - [Exception: NullPointerException]
java.lang.NullPointerException: Cannot invoke "com.tomato.naraclub.common.dto.ListDTO.getPagination()" because "newsPage" is null
	at com.tomato.naraclub.admin.original.controller.AdminNewsController.newsList(AdminNewsController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.tomato.naraclub.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:115)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at com.tomato.naraclub.common.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:115)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-05-06 20:52:45.703 WARN  [http-nio-8032-exec-2] o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [java.lang.NullPointerException: Cannot invoke "com.tomato.naraclub.common.dto.ListDTO.getPagination()" because "newsPage" is null]
