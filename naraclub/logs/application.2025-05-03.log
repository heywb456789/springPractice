2025-05-03 22:10:18.305 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 7828 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-03 22:10:18.311 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-03 22:10:18.312 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-03 22:10:18.367 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-03 22:10:18.368 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-03 22:10:20.268 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-03 22:10:20.785 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 507 ms. Found 24 JPA repository interfaces.
2025-05-03 22:10:22.079 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-03 22:10:22.096 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-03 22:10:22.097 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-03 22:10:22.212 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-03 22:10:22.212 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3844 ms
2025-05-03 22:10:22.750 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-03 22:10:22.858 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-03 22:10:22.916 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-03 22:10:23.317 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-03 22:10:23.359 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-03 22:10:23.471 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-03 22:10:23.474 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 3 msec}
2025-05-03 22:10:23.476 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5e5cef24
2025-05-03 22:10:23.478 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-03 22:10:23.496 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-03 22:10:23.497 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
2025-05-03 22:10:23.514 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-03 22:10:25.395 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-03 22:10:25.491 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-03 22:10:25.492 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-03 22:10:25.503 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'

2025-05-03 22:10:25.545 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select table_name from information_schema.TABLES where table_schema=database() and table_type='SEQUENCE'
 {executed in 42 msec}
2025-05-03 22:10:25.547 INFO  [restartedMain] jdbc.resultsettable - 
|------------------|
|table_name        |
|------------------|
|news_article_seq  |
|point_history_seq |
|share_history_seq |
|view_history_seq  |
|vote_post_seq     |
|vote_record_seq   |
|------------------|

2025-05-03 22:10:25.548 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. SELECT 'news_article_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM news_article_seq UNION ALL SELECT 'point_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM point_history_seq UNION ALL SELECT 'share_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM share_history_seq UNION ALL SELECT 'view_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM view_history_seq UNION ALL SELECT 'vote_post_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_post_seq UNION ALL SELECT 'vote_record_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_record_seq

2025-05-03 22:10:25.575 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. SELECT 'news_article_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM news_article_seq UNION ALL SELECT 'point_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM point_history_seq UNION ALL SELECT 'share_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM share_history_seq UNION ALL SELECT 'view_history_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM view_history_seq UNION ALL SELECT 'vote_post_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_post_seq UNION ALL SELECT 'vote_record_seq' as sequence_name, minimum_value, maximum_value, start_value, increment, cache_size FROM vote_record_seq
 {executed in 27 msec}
2025-05-03 22:10:25.580 INFO  [restartedMain] jdbc.resultsettable - 
|------------------|--------------|--------------------|------------|----------|-----------|
|sequence_name     |minimum_value |maximum_value       |start_value |increment |cache_size |
|------------------|--------------|--------------------|------------|----------|-----------|
|news_article_seq  |1             |9223372036854775806 |1           |50        |0          |
|point_history_seq |1             |9223372036854775806 |1           |50        |0          |
|share_history_seq |1             |9223372036854775806 |1           |50        |0          |
|view_history_seq  |1             |9223372036854775806 |1           |50        |0          |
|vote_post_seq     |1             |9223372036854775806 |1           |50        |0          |
|vote_record_seq   |1             |9223372036854775806 |1           |50        |0          |
|------------------|--------------|--------------------|------------|----------|-----------|

2025-05-03 22:10:25.611 ERROR [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [is_deleted] in table [t_board_comments]
2025-05-03 22:10:25.612 ERROR [restartedMain] o.s.b.w.e.tomcat.TomcatStarter - Error starting Tomcat context. Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. Message: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\common\security\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
2025-05-03 22:10:25.651 INFO  [restartedMain] o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-05-03 22:10:25.655 WARN  [restartedMain] o.a.c.loader.WebappClassLoaderBase - The web application [ROOT] appears to have started a thread named [narasarang-pool housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base/jdk.internal.misc.Unsafe.park(Native Method)
 java.base/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:269)
 java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1763)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1070)
 java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
 java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
 java.base/java.lang.Thread.run(Thread.java:1583)
2025-05-03 22:10:25.657 WARN  [restartedMain] o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start web server
2025-05-03 22:10:25.659 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Shutdown initiated...
2025-05-03 22:10:25.661 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Shutdown completed.
2025-05-03 22:10:25.676 INFO  [restartedMain] o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-05-03 22:10:25.719 ERROR [restartedMain] o.s.boot.SpringApplication - Application run failed
org.springframework.context.ApplicationContextException: Unable to start web server
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:170)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:147)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	... 11 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jwtAuthenticationFilter' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\common\security\JwtAuthenticationFilter.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	... 16 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'memberUserDetailsService' defined in file [C:\8.springPractice\springPractice\naraclub\build\classes\java\main\com\tomato\naraclub\application\security\MemberUserDetailsService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 57 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'memberRepository' defined in com.tomato.naraclub.application.member.repository.MemberRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Cannot resolve reference to bean 'jpaSharedEM_entityManagerFactory' while setting bean property 'entityManager'
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 71 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaSharedEM_entityManagerFactory': Cannot resolve reference to bean 'entityManagerFactory' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 85 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [is_deleted] in table [t_board_comments]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 97 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [is_deleted] in table [t_board_comments]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	... 104 common frames omitted
Caused by: org.hibernate.tool.schema.spi.SchemaManagementException: Schema-validation: missing column [is_deleted] in table [t_board_comments]
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.validateTable(AbstractSchemaValidator.java:148)
	at org.hibernate.tool.schema.internal.GroupedSchemaValidatorImpl.validateTables(GroupedSchemaValidatorImpl.java:46)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.performValidation(AbstractSchemaValidator.java:98)
	at org.hibernate.tool.schema.internal.AbstractSchemaValidator.doValidation(AbstractSchemaValidator.java:76)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:289)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 108 common frames omitted
2025-05-03 23:33:14.277 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 4592 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-03 23:33:14.278 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-03 23:33:14.279 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-03 23:33:14.332 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-03 23:33:14.334 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-03 23:33:16.035 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-03 23:33:16.528 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 485 ms. Found 24 JPA repository interfaces.
2025-05-03 23:33:17.686 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-03 23:33:17.702 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-03 23:33:17.703 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-03 23:33:17.819 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-03 23:33:17.819 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3485 ms
2025-05-03 23:33:18.365 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-03 23:33:18.439 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-03 23:33:18.484 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-03 23:33:18.859 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-03 23:33:18.897 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-03 23:33:18.990 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-03 23:33:18.994 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 4 msec}
2025-05-03 23:33:18.995 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@20041339
2025-05-03 23:33:18.997 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-03 23:33:19.015 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-03 23:33:19.015 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 0 msec}
2025-05-03 23:33:19.030 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-03 23:33:20.587 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-03 23:33:20.610 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
2025-05-03 23:33:20.610 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-03 23:33:20.611 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 1 msec}
2025-05-03 23:33:20.611 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd

2025-05-03 23:33:20.627 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
 {executed in 15 msec}
2025-05-03 23:33:20.627 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
2025-05-03 23:33:20.627 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c

2025-05-03 23:33:20.640 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
 {executed in 12 msec}
2025-05-03 23:33:20.642 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
2025-05-03 23:33:20.642 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f

2025-05-03 23:33:20.657 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
 {executed in 14 msec}
2025-05-03 23:33:20.657 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
2025-05-03 23:33:20.657 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13

2025-05-03 23:33:20.671 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
 {executed in 14 msec}
2025-05-03 23:33:20.672 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
2025-05-03 23:33:20.672 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq

2025-05-03 23:33:20.687 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
 {executed in 15 msec}
2025-05-03 23:33:20.687 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
2025-05-03 23:33:20.688 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3

2025-05-03 23:33:20.703 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
 {executed in 14 msec}
2025-05-03 23:33:20.703 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
2025-05-03 23:33:20.703 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu

2025-05-03 23:33:20.718 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
 {executed in 15 msec}
2025-05-03 23:33:20.718 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
2025-05-03 23:33:20.718 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj

2025-05-03 23:33:20.733 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
 {executed in 14 msec}
2025-05-03 23:33:20.733 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
2025-05-03 23:33:20.733 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq

2025-05-03 23:33:20.748 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
 {executed in 14 msec}
2025-05-03 23:33:20.749 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
2025-05-03 23:33:20.749 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn

2025-05-03 23:33:20.763 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
 {executed in 14 msec}
2025-05-03 23:33:20.763 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
2025-05-03 23:33:20.763 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m

2025-05-03 23:33:20.777 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
 {executed in 14 msec}
2025-05-03 23:33:20.778 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
2025-05-03 23:33:20.778 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx

2025-05-03 23:33:20.779 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
 {executed in 1 msec}
2025-05-03 23:33:20.781 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
2025-05-03 23:33:20.782 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6

2025-05-03 23:33:20.795 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
 {executed in 13 msec}
2025-05-03 23:33:20.795 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
2025-05-03 23:33:20.796 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq

2025-05-03 23:33:20.811 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
 {executed in 15 msec}
2025-05-03 23:33:20.812 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
2025-05-03 23:33:20.813 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg

2025-05-03 23:33:20.826 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
 {executed in 12 msec}
2025-05-03 23:33:20.826 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
2025-05-03 23:33:20.826 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w

2025-05-03 23:33:20.841 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
 {executed in 14 msec}
2025-05-03 23:33:20.841 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
2025-05-03 23:33:20.841 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx

2025-05-03 23:33:20.855 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
 {executed in 13 msec}
2025-05-03 23:33:20.855 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
2025-05-03 23:33:20.855 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb

2025-05-03 23:33:20.870 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
 {executed in 15 msec}
2025-05-03 23:33:20.870 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
2025-05-03 23:33:20.870 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986

2025-05-03 23:33:20.885 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
 {executed in 14 msec}
2025-05-03 23:33:20.885 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
2025-05-03 23:33:20.885 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd

2025-05-03 23:33:20.886 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
 {executed in 1 msec}
2025-05-03 23:33:20.887 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
2025-05-03 23:33:20.887 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm

2025-05-03 23:33:20.900 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
 {executed in 13 msec}
2025-05-03 23:33:20.900 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
2025-05-03 23:33:20.901 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn

2025-05-03 23:33:20.917 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
 {executed in 15 msec}
2025-05-03 23:33:20.917 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
2025-05-03 23:33:20.917 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef

2025-05-03 23:33:20.930 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
 {executed in 13 msec}
2025-05-03 23:33:20.931 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
2025-05-03 23:33:20.931 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k

2025-05-03 23:33:20.946 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
 {executed in 15 msec}
2025-05-03 23:33:20.947 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
2025-05-03 23:33:20.947 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc

2025-05-03 23:33:20.962 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
 {executed in 13 msec}
2025-05-03 23:33:20.962 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin
2025-05-03 23:33:20.962 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin

2025-05-03 23:33:20.973 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin
 {executed in 10 msec}
2025-05-03 23:33:20.973 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin_refresh_token
2025-05-03 23:33:20.973 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token

2025-05-03 23:33:20.985 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token
 {executed in 12 msec}
2025-05-03 23:33:20.985 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article
2025-05-03 23:33:20.986 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article

2025-05-03 23:33:20.995 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article
 {executed in 9 msec}
2025-05-03 23:33:20.995 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_comments
2025-05-03 23:33:20.996 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments

2025-05-03 23:33:21.007 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments
 {executed in 10 msec}
2025-05-03 23:33:21.007 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post
2025-05-03 23:33:21.007 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post

2025-05-03 23:33:21.018 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post
 {executed in 11 msec}
2025-05-03 23:33:21.018 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_image
2025-05-03 23:33:21.018 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image

2025-05-03 23:33:21.029 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image
 {executed in 11 msec}
2025-05-03 23:33:21.029 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_like
2025-05-03 23:33:21.029 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like

2025-05-03 23:33:21.040 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like
 {executed in 11 msec}
2025-05-03 23:33:21.040 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_view_history
2025-05-03 23:33:21.041 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history

2025-05-03 23:33:21.061 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history
 {executed in 19 msec}
2025-05-03 23:33:21.061 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_member
2025-05-03 23:33:21.061 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member

2025-05-03 23:33:21.069 WARN  [restartedMain] o.m.jdbc.message.server.ErrorPacket - Error: 1451-23000: Cannot delete or update a parent row: a foreign key constraint fails
2025-05-03 23:33:21.070 ERROR [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member

java.sql.SQLIntegrityConstraintViolationException: (conn=4) Cannot delete or update a parent row: a foreign key constraint fails
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:381)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.075 ERROR [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member
 {FAILED after 9 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=4) Cannot delete or update a parent row: a foreign key constraint fails
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:381)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.079 WARN  [restartedMain] o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists t_member" via JDBC [(conn=4) Cannot delete or update a parent row: a foreign key constraint fails]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists t_member" via JDBC [(conn=4) Cannot delete or update a parent row: a foreign key constraint fails]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:381)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:238)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLIntegrityConstraintViolationException: (conn=4) Cannot delete or update a parent row: a foreign key constraint fails
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:297)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-05-03 23:33:21.082 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_refresh_token
2025-05-03 23:33:21.083 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token

2025-05-03 23:33:21.095 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token
 {executed in 11 msec}
2025-05-03 23:33:21.095 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video
2025-05-03 23:33:21.095 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video

2025-05-03 23:33:21.105 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video
 {executed in 9 msec}
2025-05-03 23:33:21.105 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_comments
2025-05-03 23:33:21.105 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments

2025-05-03 23:33:21.117 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments
 {executed in 11 msec}
2025-05-03 23:33:21.117 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_view_history
2025-05-03 23:33:21.117 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history

2025-05-03 23:33:21.128 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history
 {executed in 10 msec}
2025-05-03 23:33:21.128 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_comments
2025-05-03 23:33:21.128 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments

2025-05-03 23:33:21.139 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments
 {executed in 11 msec}
2025-05-03 23:33:21.139 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_option
2025-05-03 23:33:21.139 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option

2025-05-03 23:33:21.151 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option
 {executed in 11 msec}
2025-05-03 23:33:21.151 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post
2025-05-03 23:33:21.151 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post

2025-05-03 23:33:21.161 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post
 {executed in 10 msec}
2025-05-03 23:33:21.161 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post_view_history
2025-05-03 23:33:21.162 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history

2025-05-03 23:33:21.172 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history
 {executed in 10 msec}
2025-05-03 23:33:21.172 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_record
2025-05-03 23:33:21.173 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record

2025-05-03 23:33:21.184 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record
 {executed in 11 msec}
2025-05-03 23:33:21.195 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.196 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.208 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
 {executed in 12 msec}
2025-05-03 23:33:21.209 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.210 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.219 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:33:21.220 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.220 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.230 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) engine=InnoDB
 {executed in 10 msec}
2025-05-03 23:33:21.232 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.232 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.240 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:33:21.241 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
2025-05-03 23:33:21.242 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB

2025-05-03 23:33:21.251 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:33:21.251 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.252 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.260 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:33:21.260 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.262 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.271 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:33:21.272 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.272 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.282 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:33:21.283 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.283 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.284 WARN  [restartedMain] o.m.jdbc.message.server.ErrorPacket - Error: 1050-42S01: Table 't_member' already exists
2025-05-03 23:33:21.285 ERROR [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB

java.sql.SQLSyntaxErrorException: (conn=4) Table 't_member' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:428)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:344)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.288 ERROR [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=4) Table 't_member' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:428)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:344)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.291 WARN  [restartedMain] o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB" via JDBC [(conn=4) Table 't_member' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB" via JDBC [(conn=4) Table 't_member' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:428)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:344)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: (conn=4) Table 't_member' already exists
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-05-03 23:33:21.296 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.298 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.308 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 10 msec}
2025-05-03 23:33:21.309 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
2025-05-03 23:33:21.310 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB

2025-05-03 23:33:21.322 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
 {executed in 12 msec}
2025-05-03 23:33:21.323 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.323 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.332 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:33:21.332 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.333 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.342 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:33:21.343 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.344 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.353 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:33:21.353 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.353 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.363 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 10 msec}
2025-05-03 23:33:21.364 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
2025-05-03 23:33:21.365 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB

2025-05-03 23:33:21.374 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:33:21.374 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.375 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.384 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:33:21.384 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:33:21.385 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:33:21.398 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 13 msec}
2025-05-03 23:33:21.399 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin 
       on t_admin (created_at)
2025-05-03 23:33:21.399 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)

2025-05-03 23:33:21.417 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)
 {executed in 18 msec}
2025-05-03 23:33:21.418 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
2025-05-03 23:33:21.418 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)

2025-05-03 23:33:21.436 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
 {executed in 18 msec}
2025-05-03 23:33:21.436 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
2025-05-03 23:33:21.437 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)

2025-05-03 23:33:21.454 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
 {executed in 17 msec}
2025-05-03 23:33:21.454 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
2025-05-03 23:33:21.455 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)

2025-05-03 23:33:21.472 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
 {executed in 17 msec}
2025-05-03 23:33:21.473 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_created_at 
       on t_article (created_at)
2025-05-03 23:33:21.473 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)

2025-05-03 23:33:21.490 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)
 {executed in 17 msec}
2025-05-03 23:33:21.490 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
2025-05-03 23:33:21.490 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)

2025-05-03 23:33:21.508 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
 {executed in 18 msec}
2025-05-03 23:33:21.508 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
2025-05-03 23:33:21.508 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)

2025-05-03 23:33:21.526 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
 {executed in 18 msec}
2025-05-03 23:33:21.527 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
2025-05-03 23:33:21.527 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)

2025-05-03 23:33:21.544 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
 {executed in 16 msec}
2025-05-03 23:33:21.544 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_views 
       on t_board_post (views)
2025-05-03 23:33:21.544 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)

2025-05-03 23:33:21.562 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)
 {executed in 18 msec}
2025-05-03 23:33:21.562 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_title 
       on t_board_post (title)
2025-05-03 23:33:21.563 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)

2025-05-03 23:33:21.581 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)
 {executed in 18 msec}
2025-05-03 23:33:21.581 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_content 
       on t_board_post (content)
2025-05-03 23:33:21.581 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)

2025-05-03 23:33:21.599 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)
 {executed in 17 msec}
2025-05-03 23:33:21.599 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
2025-05-03 23:33:21.599 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)

2025-05-03 23:33:21.617 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
 {executed in 17 msec}
2025-05-03 23:33:21.617 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
2025-05-03 23:33:21.617 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)

2025-05-03 23:33:21.635 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
 {executed in 17 msec}
2025-05-03 23:33:21.635 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
2025-05-03 23:33:21.635 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)

2025-05-03 23:33:21.653 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
 {executed in 16 msec}
2025-05-03 23:33:21.653 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_member 
       on t_member (created_at)
2025-05-03 23:33:21.653 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)

2025-05-03 23:33:21.659 WARN  [restartedMain] o.m.jdbc.message.server.ErrorPacket - Error: 1061-42000: Duplicate key name 'idx01_t_member'
2025-05-03 23:33:21.659 ERROR [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)

java.sql.SQLSyntaxErrorException: (conn=4) Duplicate key name 'idx01_t_member'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.661 ERROR [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)
 {FAILED after 6 msec}
java.sql.SQLSyntaxErrorException: (conn=4) Duplicate key name 'idx01_t_member'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.665 WARN  [restartedMain] o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create index idx01_t_member 
       on t_member (created_at)" via JDBC [(conn=4) Duplicate key name 'idx01_t_member']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create index idx01_t_member 
       on t_member (created_at)" via JDBC [(conn=4) Duplicate key name 'idx01_t_member']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:390)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: (conn=4) Duplicate key name 'idx01_t_member'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-05-03 23:33:21.668 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
2025-05-03 23:33:21.669 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)

2025-05-03 23:33:21.674 WARN  [restartedMain] o.m.jdbc.message.server.ErrorPacket - Error: 1061-42000: Duplicate key name 'UKnm99qmbenr55unxyhmgfinflm'
2025-05-03 23:33:21.675 ERROR [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)

java.sql.SQLSyntaxErrorException: (conn=4) Duplicate key name 'UKnm99qmbenr55unxyhmgfinflm'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:400)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.678 ERROR [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
 {FAILED after 5 msec}
java.sql.SQLSyntaxErrorException: (conn=4) Duplicate key name 'UKnm99qmbenr55unxyhmgfinflm'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:400)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
2025-05-03 23:33:21.682 WARN  [restartedMain] o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)" via JDBC [(conn=4) Duplicate key name 'UKnm99qmbenr55unxyhmgfinflm']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)" via JDBC [(conn=4) Duplicate key name 'UKnm99qmbenr55unxyhmgfinflm']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:400)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:356)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:250)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:144)
	at java.base/java.util.HashMap.forEach(HashMap.java:1429)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:141)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:322)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:457)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1506)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:682)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1185)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1454)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1358)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:211)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:174)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:169)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:154)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:87)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:271)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:245)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4464)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:772)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1203)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1193)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:749)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:203)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:412)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:870)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:164)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:438)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:128)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:107)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:520)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:222)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:193)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:167)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:619)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:755)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1364)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1353)
	at com.tomato.naraclub.NaraclubApplication.main(NaraclubApplication.java:12)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: (conn=4) Duplicate key name 'UKnm99qmbenr55unxyhmgfinflm'
	at org.mariadb.jdbc.export.ExceptionFactory.createException(ExceptionFactory.java:289)
	at org.mariadb.jdbc.export.ExceptionFactory.create(ExceptionFactory.java:378)
	at org.mariadb.jdbc.message.ClientMessage.readPacket(ClientMessage.java:172)
	at org.mariadb.jdbc.client.impl.StandardClient.readPacket(StandardClient.java:915)
	at org.mariadb.jdbc.client.impl.StandardClient.readResults(StandardClient.java:854)
	at org.mariadb.jdbc.client.impl.StandardClient.readResponse(StandardClient.java:773)
	at org.mariadb.jdbc.client.impl.StandardClient.execute(StandardClient.java:697)
	at org.mariadb.jdbc.Statement.executeInternal(Statement.java:1035)
	at org.mariadb.jdbc.Statement.execute(Statement.java:1165)
	at org.mariadb.jdbc.Statement.execute(Statement.java:493)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.execute(StatementSpy.java:923)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-05-03 23:33:21.685 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
2025-05-03 23:33:21.685 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)

2025-05-03 23:33:21.703 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
 {executed in 17 msec}
2025-05-03 23:33:21.703 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
2025-05-03 23:33:21.703 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)

2025-05-03 23:33:21.721 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
 {executed in 18 msec}
2025-05-03 23:33:21.721 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_created_at 
       on t_video (created_at)
2025-05-03 23:33:21.721 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)

2025-05-03 23:33:21.738 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)
 {executed in 17 msec}
2025-05-03 23:33:21.738 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
2025-05-03 23:33:21.738 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)

2025-05-03 23:33:21.755 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
 {executed in 17 msec}
2025-05-03 23:33:21.756 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
2025-05-03 23:33:21.756 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)

2025-05-03 23:33:21.773 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
 {executed in 16 msec}
2025-05-03 23:33:21.773 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
2025-05-03 23:33:21.773 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)

2025-05-03 23:33:21.790 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
 {executed in 17 msec}
2025-05-03 23:33:21.790 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
2025-05-03 23:33:21.792 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)

2025-05-03 23:33:21.808 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
 {executed in 15 msec}
2025-05-03 23:33:21.808 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
2025-05-03 23:33:21.808 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)

2025-05-03 23:33:21.826 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
 {executed in 18 msec}
2025-05-03 23:33:21.826 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
2025-05-03 23:33:21.827 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)

2025-05-03 23:33:21.843 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
 {executed in 15 msec}
2025-05-03 23:33:21.843 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
2025-05-03 23:33:21.843 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)

2025-05-03 23:33:21.861 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
 {executed in 17 msec}
2025-05-03 23:33:21.861 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
2025-05-03 23:33:21.861 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)

2025-05-03 23:33:21.891 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
 {executed in 29 msec}
2025-05-03 23:33:21.891 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:33:21.891 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:33:21.919 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-03 23:33:21.919 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:33:21.919 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:33:21.948 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 29 msec}
2025-05-03 23:33:21.948 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:33:21.949 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:33:21.978 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
 {executed in 29 msec}
2025-05-03 23:33:21.978 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:33:21.979 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:33:22.009 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 30 msec}
2025-05-03 23:33:22.009 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:33:22.009 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:33:22.037 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 28 msec}
2025-05-03 23:33:22.037 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
2025-05-03 23:33:22.037 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)

2025-05-03 23:33:22.067 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
 {executed in 30 msec}
2025-05-03 23:33:22.068 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:33:22.068 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:33:22.097 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 29 msec}
2025-05-03 23:33:22.097 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
2025-05-03 23:33:22.097 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)

2025-05-03 23:33:22.128 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 30 msec}
2025-05-03 23:33:22.129 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
2025-05-03 23:33:22.129 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)

2025-05-03 23:33:22.156 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
 {executed in 26 msec}
2025-05-03 23:33:22.156 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
2025-05-03 23:33:22.156 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)

2025-05-03 23:33:22.184 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
 {executed in 28 msec}
2025-05-03 23:33:22.184 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
2025-05-03 23:33:22.184 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)

2025-05-03 23:33:22.212 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 27 msec}
2025-05-03 23:33:22.213 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:33:22.213 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:33:22.240 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
 {executed in 26 msec}
2025-05-03 23:33:22.240 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
2025-05-03 23:33:22.240 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)

2025-05-03 23:33:22.268 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
 {executed in 28 msec}
2025-05-03 23:33:22.268 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
2025-05-03 23:33:22.268 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)

2025-05-03 23:33:22.295 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-03 23:33:22.296 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
2025-05-03 23:33:22.296 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)

2025-05-03 23:33:22.325 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
 {executed in 29 msec}
2025-05-03 23:33:22.325 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:33:22.326 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:33:22.351 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-03 23:33:22.351 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:33:22.352 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:33:22.380 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 28 msec}
2025-05-03 23:33:22.381 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:33:22.381 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:33:22.410 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 29 msec}
2025-05-03 23:33:22.410 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
2025-05-03 23:33:22.410 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)

2025-05-03 23:33:22.438 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 28 msec}
2025-05-03 23:33:22.439 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
2025-05-03 23:33:22.439 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)

2025-05-03 23:33:22.467 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 28 msec}
2025-05-03 23:33:22.468 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:33:22.468 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:33:22.500 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 32 msec}
2025-05-03 23:33:22.501 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:33:22.501 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:33:22.530 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
 {executed in 29 msec}
2025-05-03 23:33:22.531 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
2025-05-03 23:33:22.531 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)

2025-05-03 23:33:22.560 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
 {executed in 29 msec}
2025-05-03 23:33:22.561 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:33:22.561 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:33:22.594 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 32 msec}
2025-05-03 23:33:22.599 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-03 23:33:23.187 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-03 23:33:23.190 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtFilter' configured for use
2025-05-03 23:33:23.430 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-03 23:33:25.671 WARN  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Found 2 UserDetailsService beans, with names [adminUserDetailsService, memberUserDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2025-05-03 23:33:26.425 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-03 23:33:27.267 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@6fee6363. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-03 23:33:27.267 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Deferred [Mvc [pattern='/uploads/**'], Ant [pattern='/uploads/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-03 23:33:27.701 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-03 23:33:27.800 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8032 (http) with context path '/'
2025-05-03 23:33:27.824 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Started NaraclubApplication in 14.286 seconds (process running for 14.992)
2025-05-03 23:37:17.207 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Starting NaraclubApplication using Java 21.0.6 with PID 25440 (C:\8.springPractice\springPractice\naraclub\build\classes\java\main started by heywb in C:\8.springPractice\springPractice\naraclub)
2025-05-03 23:37:17.209 DEBUG [restartedMain] c.t.naraclub.NaraclubApplication - Running with Spring Boot v3.3.11-SNAPSHOT, Spring v6.1.19
2025-05-03 23:37:17.209 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - The following 1 profile is active: "local"
2025-05-03 23:37:17.260 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-05-03 23:37:17.260 INFO  [restartedMain] o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-05-03 23:37:19.090 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-03 23:37:19.571 INFO  [restartedMain] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 472 ms. Found 24 JPA repository interfaces.
2025-05-03 23:37:20.795 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8032 (http)
2025-05-03 23:37:20.814 INFO  [restartedMain] o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-03 23:37:20.814 INFO  [restartedMain] o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-03 23:37:20.924 INFO  [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-03 23:37:20.924 INFO  [restartedMain] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3664 ms
2025-05-03 23:37:21.398 INFO  [restartedMain] o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-05-03 23:37:21.471 INFO  [restartedMain] org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.3.Final
2025-05-03 23:37:21.513 INFO  [restartedMain] o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-05-03 23:37:21.868 INFO  [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-05-03 23:37:21.907 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Starting...
2025-05-03 23:37:22.002 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1

2025-05-03 23:37:22.005 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:579)
1. SELECT 1
 {executed in 3 msec}
2025-05-03 23:37:22.006 INFO  [restartedMain] com.zaxxer.hikari.pool.HikariPool - narasarang-pool - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6297c556
2025-05-03 23:37:22.008 INFO  [restartedMain] com.zaxxer.hikari.HikariDataSource - narasarang-pool - Start completed.
2025-05-03 23:37:22.025 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode

2025-05-03 23:37:22.026 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:110)
1. SELECT @@character_set_database, @@sql_mode
 {executed in 1 msec}
2025-05-03 23:37:22.040 WARN  [restartedMain] org.hibernate.orm.deprecation - HHH90000025: MariaDBDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-05-03 23:37:23.590 INFO  [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-05-03 23:37:23.613 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
2025-05-03 23:37:23.613 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1

2025-05-03 23:37:23.614 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.PoolBase.isConnectionDead(PoolBase.java:165)
1. SELECT 1
 {executed in 0 msec}
2025-05-03 23:37:23.614 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd

2025-05-03 23:37:23.615 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       drop 
       foreign key if exists FK27btltf21l8um6uyee068kcxd
 {executed in 0 msec}
2025-05-03 23:37:23.617 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
2025-05-03 23:37:23.617 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c

2025-05-03 23:37:23.618 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FKrhbx4xmijngagkhsmbb37oa0c
 {executed in 0 msec}
2025-05-03 23:37:23.619 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
2025-05-03 23:37:23.619 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f

2025-05-03 23:37:23.620 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       drop 
       foreign key if exists FK8609tqi7d7sr9pv71bwe3ok1f
 {executed in 1 msec}
2025-05-03 23:37:23.620 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
2025-05-03 23:37:23.621 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13

2025-05-03 23:37:23.621 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       drop 
       foreign key if exists FK8rhibb4xw35a9idll7k21yj13
 {executed in 0 msec}
2025-05-03 23:37:23.621 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
2025-05-03 23:37:23.622 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq

2025-05-03 23:37:23.622 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       drop 
       foreign key if exists FK6jh16uqfmgem4hi6qf3bonilq
 {executed in 0 msec}
2025-05-03 23:37:23.623 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
2025-05-03 23:37:23.623 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3

2025-05-03 23:37:23.623 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FK4c7v8kebgbou0qmtgaxfglyp3
 {executed in 0 msec}
2025-05-03 23:37:23.624 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
2025-05-03 23:37:23.624 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu

2025-05-03 23:37:23.624 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       drop 
       foreign key if exists FKn5yvufcte0yluf3cs233a6dcu
 {executed in 0 msec}
2025-05-03 23:37:23.625 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
2025-05-03 23:37:23.625 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj

2025-05-03 23:37:23.626 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK175y5a1erhjd9tygemoipgssj
 {executed in 0 msec}
2025-05-03 23:37:23.626 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
2025-05-03 23:37:23.626 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq

2025-05-03 23:37:23.627 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       drop 
       foreign key if exists FK7h3lhlw6gibe8srthe51whgvq
 {executed in 1 msec}
2025-05-03 23:37:23.627 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
2025-05-03 23:37:23.627 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn

2025-05-03 23:37:23.628 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       drop 
       foreign key if exists FKe7vhmq9mm9t5hyqj1c3069edn
 {executed in 1 msec}
2025-05-03 23:37:23.628 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
2025-05-03 23:37:23.628 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m

2025-05-03 23:37:23.629 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       drop 
       foreign key if exists FKn6qbibypw5q05t94310xeok1m
 {executed in 1 msec}
2025-05-03 23:37:23.629 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
2025-05-03 23:37:23.629 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx

2025-05-03 23:37:23.630 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       drop 
       foreign key if exists FKqccxpvx4wyidg8hkpimjafxsx
 {executed in 1 msec}
2025-05-03 23:37:23.630 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
2025-05-03 23:37:23.631 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6

2025-05-03 23:37:23.631 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FKrh2dk1trp0jp40prethc9a2h6
 {executed in 0 msec}
2025-05-03 23:37:23.632 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
2025-05-03 23:37:23.632 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq

2025-05-03 23:37:23.633 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       drop 
       foreign key if exists FK5l2tiv0nc9dy2e9xx6py95yhq
 {executed in 0 msec}
2025-05-03 23:37:23.633 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
2025-05-03 23:37:23.633 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg

2025-05-03 23:37:23.633 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FKsm0witk04625b4hkx6m3kodtg
 {executed in 0 msec}
2025-05-03 23:37:23.634 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
2025-05-03 23:37:23.634 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w

2025-05-03 23:37:23.634 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       drop 
       foreign key if exists FK19dbf98d510eq0cmk91bri80w
 {executed in 0 msec}
2025-05-03 23:37:23.635 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
2025-05-03 23:37:23.635 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx

2025-05-03 23:37:23.635 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK43ikrk2rd2ax3117j67v1balx
 {executed in 0 msec}
2025-05-03 23:37:23.636 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
2025-05-03 23:37:23.636 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb

2025-05-03 23:37:23.636 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       drop 
       foreign key if exists FK8qliuryuyl0jwqesjftux8anb
 {executed in 0 msec}
2025-05-03 23:37:23.637 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
2025-05-03 23:37:23.637 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986

2025-05-03 23:37:23.637 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       drop 
       foreign key if exists FKrhmew5nnhy1bblha09fu7e986
 {executed in 0 msec}
2025-05-03 23:37:23.637 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
2025-05-03 23:37:23.638 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd

2025-05-03 23:37:23.638 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       drop 
       foreign key if exists FKgh01t79bp0s86rpnval4ufkrd
 {executed in 0 msec}
2025-05-03 23:37:23.639 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
2025-05-03 23:37:23.639 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm

2025-05-03 23:37:23.639 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FKmddcn4870t4l5gv6skpai1svm
 {executed in 0 msec}
2025-05-03 23:37:23.640 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
2025-05-03 23:37:23.640 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn

2025-05-03 23:37:23.641 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       drop 
       foreign key if exists FK3lvhmudpqdrmdywbwt18mn2gn
 {executed in 0 msec}
2025-05-03 23:37:23.641 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
2025-05-03 23:37:23.641 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef

2025-05-03 23:37:23.641 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKe6jp15hjwmhdtdrutkghbrvef
 {executed in 0 msec}
2025-05-03 23:37:23.642 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
2025-05-03 23:37:23.642 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k

2025-05-03 23:37:23.642 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FKdkp1tngekimuvonybfuo0qh2k
 {executed in 0 msec}
2025-05-03 23:37:23.642 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
2025-05-03 23:37:23.643 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc

2025-05-03 23:37:23.643 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       drop 
       foreign key if exists FK2ps2qhrtng1u1w2q2wme6rpcc
 {executed in 0 msec}
2025-05-03 23:37:23.643 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin
2025-05-03 23:37:23.644 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin

2025-05-03 23:37:23.653 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin
 {executed in 9 msec}
2025-05-03 23:37:23.654 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_admin_refresh_token
2025-05-03 23:37:23.654 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token

2025-05-03 23:37:23.664 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_admin_refresh_token
 {executed in 10 msec}
2025-05-03 23:37:23.664 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_article
2025-05-03 23:37:23.664 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article

2025-05-03 23:37:23.673 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_article
 {executed in 9 msec}
2025-05-03 23:37:23.673 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_comments
2025-05-03 23:37:23.674 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments

2025-05-03 23:37:23.682 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_comments
 {executed in 8 msec}
2025-05-03 23:37:23.682 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post
2025-05-03 23:37:23.682 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post

2025-05-03 23:37:23.691 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post
 {executed in 9 msec}
2025-05-03 23:37:23.691 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_image
2025-05-03 23:37:23.692 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image

2025-05-03 23:37:23.700 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_image
 {executed in 8 msec}
2025-05-03 23:37:23.701 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_like
2025-05-03 23:37:23.701 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like

2025-05-03 23:37:23.710 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_like
 {executed in 9 msec}
2025-05-03 23:37:23.711 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_board_post_view_history
2025-05-03 23:37:23.711 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history

2025-05-03 23:37:23.721 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_board_post_view_history
 {executed in 9 msec}
2025-05-03 23:37:23.721 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_member
2025-05-03 23:37:23.721 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member

2025-05-03 23:37:23.731 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_member
 {executed in 9 msec}
2025-05-03 23:37:23.731 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_refresh_token
2025-05-03 23:37:23.732 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token

2025-05-03 23:37:23.741 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_refresh_token
 {executed in 9 msec}
2025-05-03 23:37:23.742 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video
2025-05-03 23:37:23.742 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video

2025-05-03 23:37:23.751 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video
 {executed in 9 msec}
2025-05-03 23:37:23.752 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_comments
2025-05-03 23:37:23.752 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments

2025-05-03 23:37:23.761 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_comments
 {executed in 9 msec}
2025-05-03 23:37:23.762 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_video_view_history
2025-05-03 23:37:23.762 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history

2025-05-03 23:37:23.771 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_video_view_history
 {executed in 9 msec}
2025-05-03 23:37:23.772 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_comments
2025-05-03 23:37:23.772 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments

2025-05-03 23:37:23.781 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_comments
 {executed in 9 msec}
2025-05-03 23:37:23.781 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_option
2025-05-03 23:37:23.781 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option

2025-05-03 23:37:23.791 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_option
 {executed in 10 msec}
2025-05-03 23:37:23.792 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post
2025-05-03 23:37:23.792 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post

2025-05-03 23:37:23.801 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post
 {executed in 9 msec}
2025-05-03 23:37:23.802 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_post_view_history
2025-05-03 23:37:23.802 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history

2025-05-03 23:37:23.813 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_post_view_history
 {executed in 10 msec}
2025-05-03 23:37:23.813 DEBUG [restartedMain] org.hibernate.SQL - 
    drop table if exists t_vote_record
2025-05-03 23:37:23.813 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record

2025-05-03 23:37:23.823 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. drop table if exists t_vote_record
 {executed in 10 msec}
2025-05-03 23:37:23.830 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.831 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.840 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        email varchar(255) not null comment '이메일',
        name varchar(255) not null comment '이름',
        password varchar(255) not null comment '비밀번호',
        phone_number varchar(255) not null comment '전화번호',
        username varchar(255) not null comment '로그인 아이디',
        role enum ('ADMIN') comment '롤',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.841 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.841 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.850 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_admin_refresh_token (
        admin_id bigint not null,
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:37:23.852 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.852 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.861 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_article (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_hot bit not null comment '핫 인지 아닌지',
        is_public bit not null comment '공개 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at datetime(6) not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        external_id varchar(255) not null comment '토마토 기사 ID',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.862 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.862 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.872 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 10 msec}
2025-05-03 23:37:23.873 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
2025-05-03 23:37:23.873 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB

2025-05-03 23:37:23.884 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post (
        is_deleted bit not null,
        is_hot TINYINT(1) default 0 not null comment '핫 여부',
        likes integer not null comment '좋아요 수',
        share_count integer not null comment '공유 수',
        views integer not null comment '조회수',
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content varchar(2000) not null comment '상세 내용',
        title varchar(255) not null comment '글 제목',
        primary key (id)
    ) comment='이미지 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.884 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.885 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.894 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_image (
        board_post_id bigint not null comment '게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '이미지 URL',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.895 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.896 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.906 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_like (
        board_post_id bigint not null comment '좋아요 대상 게시글',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        member_id bigint not null comment '좋아요 누른 회원',
        updated_at datetime(6) comment '수정일시',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.907 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.907 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.917 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_board_post_view_history (
        board_post_id bigint not null comment '비디오 id',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.918 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.918 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.927 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_member (
        verified bit not null comment '신원인증 여부',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        inviter_id bigint,
        last_access_at datetime(6) comment '마지막 접속 시간',
        updated_at datetime(6) comment '수정일시',
        invite_code varchar(10) not null comment '초대코드 - 가입시 자동생성',
        phone_number varchar(20) comment '폰번호',
        name varchar(50) not null comment '사용자 명',
        created_by varchar(100) comment '등록자',
        email varchar(100) comment '이메일',
        password varchar(100) comment 'tongtongPasswd',
        updated_by varchar(100) comment '수정자',
        user_key varchar(100) comment 'tongtongOneId',
        profile_img varchar(255) comment '프로필 이미지',
        role enum ('USER_ACTIVE','USER_INACTIVE') not null comment '유저 롤',
        status enum ('ACTIVE','BLOCKED','DELETED','TEMPORARY_INVITE','TEMPORARY_PASS') not null comment '유저 상태',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.928 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.928 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.939 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_refresh_token (
        created_at datetime(6) comment '등록일시',
        expiry_date datetime(6) not null,
        id bigint not null auto_increment,
        last_used_at datetime(6),
        member_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        refresh_token varchar(500) not null,
        created_by varchar(255) comment '등록자',
        device_type varchar(255),
        ip_address varchar(255),
        updated_by varchar(255) comment '수정자',
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
 {executed in 10 msec}
2025-05-03 23:37:23.939 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
2025-05-03 23:37:23.940 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB

2025-05-03 23:37:23.949 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video (
        category tinyint not null comment '기사 카테고리' check (category between 0 and 3),
        duration_sec integer not null,
        is_deleted bit not null,
        is_hot BOOLEAN DEFAULT FALSE not null comment '핫 인지 아닌지',
        is_public BOOLEAN DEFAULT FALSE not null comment '공개 여부',
        author_id bigint not null,
        comment_count BIGINT DEFAULT 0 not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        published_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP not null comment '공개 시간',
        updated_at datetime(6) comment '수정일시',
        view_count BIGINT DEFAULT 0 not null comment '조회수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        image_url varchar(500) not null comment '썸네일',
        description varchar(2000) comment '설명 / 내용',
        title varchar(255) not null comment '제목',
        video_url varchar(255) not null comment '비디오 URL',
        youtube_id varchar(255) comment '유튜브 영상 ID',
        type enum ('NEWS_ARTICLE','YOUTUBE_SHORTS','YOUTUBE_VIDEO') not null comment '토마토 오리지날 타입',
        primary key (id)
    ) comment='댓글 목록' engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.950 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.950 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.959 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:37:23.960 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.961 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.970 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_video_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        video_id bigint not null comment '비디오 id',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.970 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.970 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.980 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_comments (
        is_deleted bit not null,
        author_id bigint not null comment '댓글 작성자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_post_id bigint not null comment '투표 게시글',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        content TEXT not null comment '댓글 내용',
        primary key (id)
    ) engine=InnoDB
 {executed in 8 msec}
2025-05-03 23:37:23.980 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:23.980 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:23.989 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_option (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_count bigint not null comment '총 투표수 기록',
        vote_post_id bigint not null,
        option_name varchar(50) not null comment '찬성/ 반대 등 의 선택지',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.990 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
2025-05-03 23:37:23.990 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB

2025-05-03 23:37:23.999 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post (
        is_deleted bit not null,
        author_id bigint not null,
        comment_count bigint not null comment '댓글 수',
        created_at datetime(6) comment '등록일시',
        end_date datetime(6) comment '종료',
        id bigint not null auto_increment,
        share_count bigint not null comment '공유수',
        start_date datetime(6) comment '시작',
        updated_at datetime(6) comment '수정일시',
        view_count bigint not null comment '조회수',
        vote_count bigint not null comment '투표수',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        question varchar(200) not null comment '투표 제목',
        primary key (id)
    ) comment='투표 선택지' engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:23.999 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:24.000 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:24.010 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_post_view_history (
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        reader_id bigint not null,
        updated_at datetime(6) comment '수정일시',
        viewed_at datetime(6) not null comment '조회 시각 (변경 불가)',
        vote_post_id bigint not null comment '비디오 id',
        device_type varchar(20) not null comment '디바이스 유형 (MOBILE, TABLET, DESKTOP 등)',
        ip_address varchar(45) not null comment '조회자 IP 주소',
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        user_agent varchar(512) not null comment 'User-Agent 헤더 전체',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:24.010 DEBUG [restartedMain] org.hibernate.SQL - 
    create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
2025-05-03 23:37:24.010 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB

2025-05-03 23:37:24.019 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create table t_vote_record (
        author_id bigint not null comment '투표자',
        created_at datetime(6) comment '등록일시',
        id bigint not null auto_increment,
        updated_at datetime(6) comment '수정일시',
        vote_option_id bigint not null,
        vote_post_id bigint not null,
        created_by varchar(100) comment '등록자',
        updated_by varchar(100) comment '수정자',
        primary key (id)
    ) engine=InnoDB
 {executed in 9 msec}
2025-05-03 23:37:24.019 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin 
       on t_admin (created_at)
2025-05-03 23:37:24.020 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)

2025-05-03 23:37:24.037 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin 
       on t_admin (created_at)
 {executed in 17 msec}
2025-05-03 23:37:24.037 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
2025-05-03 23:37:24.038 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)

2025-05-03 23:37:24.056 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin 
       add constraint UK3f137q5sgpm7mtbeaxixnug35 unique (username)
 {executed in 17 msec}
2025-05-03 23:37:24.056 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
2025-05-03 23:37:24.056 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)

2025-05-03 23:37:24.075 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_admin_refresh_token_created_at 
       on t_admin_refresh_token (created_at)
 {executed in 19 msec}
2025-05-03 23:37:24.075 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
2025-05-03 23:37:24.075 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)

2025-05-03 23:37:24.095 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint UKf3pxboqa231p2pp7n5w8gmihi unique (refresh_token)
 {executed in 19 msec}
2025-05-03 23:37:24.096 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_article_created_at 
       on t_article (created_at)
2025-05-03 23:37:24.096 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)

2025-05-03 23:37:24.115 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_article_created_at 
       on t_article (created_at)
 {executed in 19 msec}
2025-05-03 23:37:24.115 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
2025-05-03 23:37:24.116 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)

2025-05-03 23:37:24.135 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_article 
       add constraint UKg56euybv9pbcoy86bfp7pxkwx unique (external_id)
 {executed in 19 msec}
2025-05-03 23:37:24.135 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
2025-05-03 23:37:24.135 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)

2025-05-03 23:37:24.154 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_board_comments (created_at)
 {executed in 19 msec}
2025-05-03 23:37:24.154 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
2025-05-03 23:37:24.154 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)

2025-05-03 23:37:24.172 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_created_at 
       on t_board_post (created_at)
 {executed in 17 msec}
2025-05-03 23:37:24.172 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_views 
       on t_board_post (views)
2025-05-03 23:37:24.172 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)

2025-05-03 23:37:24.193 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_views 
       on t_board_post (views)
 {executed in 21 msec}
2025-05-03 23:37:24.194 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_title 
       on t_board_post (title)
2025-05-03 23:37:24.194 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)

2025-05-03 23:37:24.212 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_title 
       on t_board_post (title)
 {executed in 18 msec}
2025-05-03 23:37:24.212 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx02_t_board_post_content 
       on t_board_post (content)
2025-05-03 23:37:24.213 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)

2025-05-03 23:37:24.230 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx02_t_board_post_content 
       on t_board_post (content)
 {executed in 17 msec}
2025-05-03 23:37:24.231 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
2025-05-03 23:37:24.231 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)

2025-05-03 23:37:24.248 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_image_post_id 
       on t_board_post_image (board_post_id)
 {executed in 17 msec}
2025-05-03 23:37:24.248 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
2025-05-03 23:37:24.248 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)

2025-05-03 23:37:24.266 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint uk_board_post_like_member_post unique (member_id, board_post_id)
 {executed in 17 msec}
2025-05-03 23:37:24.266 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
2025-05-03 23:37:24.266 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)

2025-05-03 23:37:24.282 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_post_view_history_created_at 
       on t_board_post_view_history (created_at)
 {executed in 16 msec}
2025-05-03 23:37:24.283 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_member 
       on t_member (created_at)
2025-05-03 23:37:24.283 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)

2025-05-03 23:37:24.300 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_member 
       on t_member (created_at)
 {executed in 17 msec}
2025-05-03 23:37:24.301 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
2025-05-03 23:37:24.301 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)

2025-05-03 23:37:24.319 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint UKnm99qmbenr55unxyhmgfinflm unique (user_key)
 {executed in 18 msec}
2025-05-03 23:37:24.319 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
2025-05-03 23:37:24.320 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)

2025-05-03 23:37:24.338 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_refresh_token_created_at 
       on t_refresh_token (created_at)
 {executed in 17 msec}
2025-05-03 23:37:24.338 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
2025-05-03 23:37:24.338 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)

2025-05-03 23:37:24.357 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint UKahcioqctje3lci6ml2bdqc49j unique (refresh_token)
 {executed in 17 msec}
2025-05-03 23:37:24.358 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_created_at 
       on t_video (created_at)
2025-05-03 23:37:24.358 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)

2025-05-03 23:37:24.376 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_created_at 
       on t_video (created_at)
 {executed in 18 msec}
2025-05-03 23:37:24.377 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
2025-05-03 23:37:24.377 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)

2025-05-03 23:37:24.395 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_comments_created_at 
       on t_video_comments (created_at)
 {executed in 18 msec}
2025-05-03 23:37:24.395 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
2025-05-03 23:37:24.395 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)

2025-05-03 23:37:24.413 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_video_view_history_created_at 
       on t_video_view_history (created_at)
 {executed in 17 msec}
2025-05-03 23:37:24.413 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
2025-05-03 23:37:24.413 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)

2025-05-03 23:37:24.431 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_comments_created_at 
       on t_vote_comments (created_at)
 {executed in 18 msec}
2025-05-03 23:37:24.431 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
2025-05-03 23:37:24.431 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)

2025-05-03 23:37:24.448 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_option_created_at 
       on t_vote_option (created_at)
 {executed in 17 msec}
2025-05-03 23:37:24.448 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
2025-05-03 23:37:24.449 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)

2025-05-03 23:37:24.466 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_created_at 
       on t_vote_post (created_at)
 {executed in 17 msec}
2025-05-03 23:37:24.467 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
2025-05-03 23:37:24.467 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)

2025-05-03 23:37:24.483 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_vote_post_view_history_created_at 
       on t_vote_post_view_history (created_at)
 {executed in 16 msec}
2025-05-03 23:37:24.484 DEBUG [restartedMain] org.hibernate.SQL - 
    create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
2025-05-03 23:37:24.484 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)

2025-05-03 23:37:24.500 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. create index idx01_t_board_comments_created_at 
       on t_vote_record (created_at)
 {executed in 16 msec}
2025-05-03 23:37:24.500 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
2025-05-03 23:37:24.500 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)

2025-05-03 23:37:24.528 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_admin_refresh_token 
       add constraint FK27btltf21l8um6uyee068kcxd 
       foreign key (admin_id) 
       references t_admin (id)
 {executed in 28 msec}
2025-05-03 23:37:24.528 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:37:24.528 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:37:24.554 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FKrhbx4xmijngagkhsmbb37oa0c 
       foreign key (author_id) 
       references t_member (id)
 {executed in 26 msec}
2025-05-03 23:37:24.554 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:37:24.554 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:37:24.581 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_comments 
       add constraint FK8609tqi7d7sr9pv71bwe3ok1f 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 27 msec}
2025-05-03 23:37:24.582 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:37:24.582 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:37:24.610 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post 
       add constraint FK8rhibb4xw35a9idll7k21yj13 
       foreign key (author_id) 
       references t_member (id)
 {executed in 28 msec}
2025-05-03 23:37:24.611 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:37:24.611 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:37:24.637 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_image 
       add constraint FK6jh16uqfmgem4hi6qf3bonilq 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 26 msec}
2025-05-03 23:37:24.637 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:37:24.637 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:37:24.665 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FK4c7v8kebgbou0qmtgaxfglyp3 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 27 msec}
2025-05-03 23:37:24.665 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
2025-05-03 23:37:24.665 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)

2025-05-03 23:37:24.693 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_like 
       add constraint FKn5yvufcte0yluf3cs233a6dcu 
       foreign key (member_id) 
       references t_member (id)
 {executed in 28 msec}
2025-05-03 23:37:24.694 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
2025-05-03 23:37:24.694 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)

2025-05-03 23:37:24.722 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK175y5a1erhjd9tygemoipgssj 
       foreign key (board_post_id) 
       references t_board_post (id)
 {executed in 28 msec}
2025-05-03 23:37:24.722 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
2025-05-03 23:37:24.722 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)

2025-05-03 23:37:24.753 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_board_post_view_history 
       add constraint FK7h3lhlw6gibe8srthe51whgvq 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 31 msec}
2025-05-03 23:37:24.754 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
2025-05-03 23:37:24.754 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)

2025-05-03 23:37:24.783 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_member 
       add constraint FKe7vhmq9mm9t5hyqj1c3069edn 
       foreign key (inviter_id) 
       references t_member (id)
 {executed in 28 msec}
2025-05-03 23:37:24.783 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
2025-05-03 23:37:24.783 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)

2025-05-03 23:37:24.813 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_refresh_token 
       add constraint FKn6qbibypw5q05t94310xeok1m 
       foreign key (member_id) 
       references t_member (id)
 {executed in 30 msec}
2025-05-03 23:37:24.813 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
2025-05-03 23:37:24.813 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)

2025-05-03 23:37:24.841 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video 
       add constraint FKqccxpvx4wyidg8hkpimjafxsx 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 28 msec}
2025-05-03 23:37:24.842 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:37:24.842 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:37:24.869 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FKrh2dk1trp0jp40prethc9a2h6 
       foreign key (author_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-03 23:37:24.869 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
2025-05-03 23:37:24.870 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)

2025-05-03 23:37:24.899 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_comments 
       add constraint FK5l2tiv0nc9dy2e9xx6py95yhq 
       foreign key (video_id) 
       references t_video (id)
 {executed in 29 msec}
2025-05-03 23:37:24.899 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
2025-05-03 23:37:24.899 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)

2025-05-03 23:37:24.926 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FKsm0witk04625b4hkx6m3kodtg 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 27 msec}
2025-05-03 23:37:24.926 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
2025-05-03 23:37:24.926 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)

2025-05-03 23:37:24.954 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_video_view_history 
       add constraint FK19dbf98d510eq0cmk91bri80w 
       foreign key (video_id) 
       references t_video (id)
 {executed in 28 msec}
2025-05-03 23:37:24.954 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:37:24.955 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:37:24.982 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK43ikrk2rd2ax3117j67v1balx 
       foreign key (author_id) 
       references t_member (id)
 {executed in 26 msec}
2025-05-03 23:37:24.982 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:37:24.982 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:37:25.010 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_comments 
       add constraint FK8qliuryuyl0jwqesjftux8anb 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 28 msec}
2025-05-03 23:37:25.010 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:37:25.011 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:37:25.037 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_option 
       add constraint FKrhmew5nnhy1bblha09fu7e986 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 26 msec}
2025-05-03 23:37:25.037 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
2025-05-03 23:37:25.037 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)

2025-05-03 23:37:25.061 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post 
       add constraint FKgh01t79bp0s86rpnval4ufkrd 
       foreign key (author_id) 
       references t_admin (id)
 {executed in 24 msec}
2025-05-03 23:37:25.062 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
2025-05-03 23:37:25.062 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)

2025-05-03 23:37:25.087 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FKmddcn4870t4l5gv6skpai1svm 
       foreign key (reader_id) 
       references t_member (id)
 {executed in 25 msec}
2025-05-03 23:37:25.087 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:37:25.087 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:37:25.116 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_post_view_history 
       add constraint FK3lvhmudpqdrmdywbwt18mn2gn 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 29 msec}
2025-05-03 23:37:25.116 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
2025-05-03 23:37:25.116 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)

2025-05-03 23:37:25.142 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKe6jp15hjwmhdtdrutkghbrvef 
       foreign key (author_id) 
       references t_member (id)
 {executed in 26 msec}
2025-05-03 23:37:25.142 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
2025-05-03 23:37:25.142 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)

2025-05-03 23:37:25.174 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FKdkp1tngekimuvonybfuo0qh2k 
       foreign key (vote_option_id) 
       references t_vote_option (id)
 {executed in 32 msec}
2025-05-03 23:37:25.175 DEBUG [restartedMain] org.hibernate.SQL - 
    alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
2025-05-03 23:37:25.175 DEBUG [restartedMain] jdbc.sqlonly -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)

2025-05-03 23:37:25.204 DEBUG [restartedMain] jdbc.sqltiming -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
1. alter table if exists t_vote_record 
       add constraint FK2ps2qhrtng1u1w2q2wme6rpcc 
       foreign key (vote_post_id) 
       references t_vote_post (id)
 {executed in 29 msec}
2025-05-03 23:37:25.210 INFO  [restartedMain] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-03 23:37:25.675 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-05-03 23:37:25.678 DEBUG [restartedMain] c.t.n.c.s.JwtAuthenticationFilter - Filter 'jwtFilter' configured for use
2025-05-03 23:37:25.890 INFO  [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-03 23:37:27.668 WARN  [restartedMain] o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Found 2 UserDetailsService beans, with names [adminUserDetailsService, memberUserDetailsService]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2025-05-03 23:37:28.280 INFO  [restartedMain] o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-05-03 23:37:28.935 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.StaticResourceRequest$StaticResourceRequestMatcher@3331b6af. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-03 23:37:28.935 WARN  [restartedMain] o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Deferred [Mvc [pattern='/uploads/**'], Ant [pattern='/uploads/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-03 23:37:29.353 INFO  [restartedMain] o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-05-03 23:37:29.421 INFO  [restartedMain] o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8032 (http) with context path '/'
2025-05-03 23:37:29.434 INFO  [restartedMain] c.t.naraclub.NaraclubApplication - Started NaraclubApplication in 12.943 seconds (process running for 13.612)
